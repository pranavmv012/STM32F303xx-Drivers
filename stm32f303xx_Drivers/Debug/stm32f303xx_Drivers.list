
stm32f303xx_Drivers.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000194  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         0000056c  08000194  08000194  00010194  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  08000700  08000700  00020004  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  08000700  08000700  00020004  2**0
                  CONTENTS
  4 .ARM          00000000  08000700  08000700  00020004  2**0
                  CONTENTS
  5 .preinit_array 00000000  08000700  08000700  00020004  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08000700  08000700  00010700  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08000704  08000704  00010704  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000004  20000000  08000708  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .ccmram       00000000  10000000  10000000  00020004  2**0
                  CONTENTS
 10 .bss          0000001c  20000004  20000004  00020004  2**2
                  ALLOC
 11 ._user_heap_stack 00000600  20000020  20000020  00020004  2**0
                  ALLOC
 12 .ARM.attributes 00000030  00000000  00000000  00020004  2**0
                  CONTENTS, READONLY
 13 .debug_info   00001078  00000000  00000000  00020034  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_abbrev 00000351  00000000  00000000  000210ac  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_aranges 000000a8  00000000  00000000  00021400  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_ranges 00000080  00000000  00000000  000214a8  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_macro  00002059  00000000  00000000  00021528  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_line   00000ded  00000000  00000000  00023581  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_str    000092cc  00000000  00000000  0002436e  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .comment      00000053  00000000  00000000  0002d63a  2**0
                  CONTENTS, READONLY
 21 .debug_frame  000001d4  00000000  00000000  0002d690  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000194 <__do_global_dtors_aux>:
 8000194:	b510      	push	{r4, lr}
 8000196:	4c05      	ldr	r4, [pc, #20]	; (80001ac <__do_global_dtors_aux+0x18>)
 8000198:	7823      	ldrb	r3, [r4, #0]
 800019a:	b933      	cbnz	r3, 80001aa <__do_global_dtors_aux+0x16>
 800019c:	4b04      	ldr	r3, [pc, #16]	; (80001b0 <__do_global_dtors_aux+0x1c>)
 800019e:	b113      	cbz	r3, 80001a6 <__do_global_dtors_aux+0x12>
 80001a0:	4804      	ldr	r0, [pc, #16]	; (80001b4 <__do_global_dtors_aux+0x20>)
 80001a2:	f3af 8000 	nop.w
 80001a6:	2301      	movs	r3, #1
 80001a8:	7023      	strb	r3, [r4, #0]
 80001aa:	bd10      	pop	{r4, pc}
 80001ac:	20000004 	.word	0x20000004
 80001b0:	00000000 	.word	0x00000000
 80001b4:	080006e8 	.word	0x080006e8

080001b8 <frame_dummy>:
 80001b8:	b508      	push	{r3, lr}
 80001ba:	4b03      	ldr	r3, [pc, #12]	; (80001c8 <frame_dummy+0x10>)
 80001bc:	b11b      	cbz	r3, 80001c6 <frame_dummy+0xe>
 80001be:	4903      	ldr	r1, [pc, #12]	; (80001cc <frame_dummy+0x14>)
 80001c0:	4803      	ldr	r0, [pc, #12]	; (80001d0 <frame_dummy+0x18>)
 80001c2:	f3af 8000 	nop.w
 80001c6:	bd08      	pop	{r3, pc}
 80001c8:	00000000 	.word	0x00000000
 80001cc:	20000008 	.word	0x20000008
 80001d0:	080006e8 	.word	0x080006e8

080001d4 <GPIO_PCLKControl>:
 *   Inputs		:  Pointer to base address of the GPIO port, Enable or disable variable
 * Output/return:  NOne.
 * =====================================================================================
 */
void GPIO_PCLKControl(GPIO_Reg_Def_t *pGPIOx, uint8_t ENorDI)
{
 80001d4:	b480      	push	{r7}
 80001d6:	b083      	sub	sp, #12
 80001d8:	af00      	add	r7, sp, #0
 80001da:	6078      	str	r0, [r7, #4]
 80001dc:	460b      	mov	r3, r1
 80001de:	70fb      	strb	r3, [r7, #3]
 if(ENorDI == ENABLE)
 80001e0:	78fb      	ldrb	r3, [r7, #3]
 80001e2:	2b01      	cmp	r3, #1
 80001e4:	d167      	bne.n	80002b6 <GPIO_PCLKControl+0xe2>
  {
	 if(pGPIOx ==GPIOA)
 80001e6:	687b      	ldr	r3, [r7, #4]
 80001e8:	f1b3 4f90 	cmp.w	r3, #1207959552	; 0x48000000
 80001ec:	d108      	bne.n	8000200 <GPIO_PCLKControl+0x2c>
	 {
		GPIOA_PCLK_EN();
 80001ee:	4b68      	ldr	r3, [pc, #416]	; (8000390 <GPIO_PCLKControl+0x1bc>)
 80001f0:	681b      	ldr	r3, [r3, #0]
 80001f2:	695a      	ldr	r2, [r3, #20]
 80001f4:	4b66      	ldr	r3, [pc, #408]	; (8000390 <GPIO_PCLKControl+0x1bc>)
 80001f6:	681b      	ldr	r3, [r3, #0]
 80001f8:	f442 3200 	orr.w	r2, r2, #131072	; 0x20000
 80001fc:	615a      	str	r2, [r3, #20]
	  }else if(pGPIOx == GPIOH)
	  {
	      GPIOH_PCLK_DI();
	  }
 }
}
 80001fe:	e0c1      	b.n	8000384 <GPIO_PCLKControl+0x1b0>
	 }else if(pGPIOx == GPIOB)
 8000200:	687b      	ldr	r3, [r7, #4]
 8000202:	4a64      	ldr	r2, [pc, #400]	; (8000394 <GPIO_PCLKControl+0x1c0>)
 8000204:	4293      	cmp	r3, r2
 8000206:	d108      	bne.n	800021a <GPIO_PCLKControl+0x46>
		GPIOB_PCLK_EN();
 8000208:	4b61      	ldr	r3, [pc, #388]	; (8000390 <GPIO_PCLKControl+0x1bc>)
 800020a:	681b      	ldr	r3, [r3, #0]
 800020c:	695a      	ldr	r2, [r3, #20]
 800020e:	4b60      	ldr	r3, [pc, #384]	; (8000390 <GPIO_PCLKControl+0x1bc>)
 8000210:	681b      	ldr	r3, [r3, #0]
 8000212:	f442 2280 	orr.w	r2, r2, #262144	; 0x40000
 8000216:	615a      	str	r2, [r3, #20]
}
 8000218:	e0b4      	b.n	8000384 <GPIO_PCLKControl+0x1b0>
	 }else if(pGPIOx == GPIOC)
 800021a:	687b      	ldr	r3, [r7, #4]
 800021c:	4a5e      	ldr	r2, [pc, #376]	; (8000398 <GPIO_PCLKControl+0x1c4>)
 800021e:	4293      	cmp	r3, r2
 8000220:	d108      	bne.n	8000234 <GPIO_PCLKControl+0x60>
		GPIOC_PCLK_EN();
 8000222:	4b5b      	ldr	r3, [pc, #364]	; (8000390 <GPIO_PCLKControl+0x1bc>)
 8000224:	681b      	ldr	r3, [r3, #0]
 8000226:	695a      	ldr	r2, [r3, #20]
 8000228:	4b59      	ldr	r3, [pc, #356]	; (8000390 <GPIO_PCLKControl+0x1bc>)
 800022a:	681b      	ldr	r3, [r3, #0]
 800022c:	f442 2200 	orr.w	r2, r2, #524288	; 0x80000
 8000230:	615a      	str	r2, [r3, #20]
}
 8000232:	e0a7      	b.n	8000384 <GPIO_PCLKControl+0x1b0>
	 } else if(pGPIOx == GPIOD)
 8000234:	687b      	ldr	r3, [r7, #4]
 8000236:	4a59      	ldr	r2, [pc, #356]	; (800039c <GPIO_PCLKControl+0x1c8>)
 8000238:	4293      	cmp	r3, r2
 800023a:	d108      	bne.n	800024e <GPIO_PCLKControl+0x7a>
		GPIOD_PCLK_EN();
 800023c:	4b54      	ldr	r3, [pc, #336]	; (8000390 <GPIO_PCLKControl+0x1bc>)
 800023e:	681b      	ldr	r3, [r3, #0]
 8000240:	695a      	ldr	r2, [r3, #20]
 8000242:	4b53      	ldr	r3, [pc, #332]	; (8000390 <GPIO_PCLKControl+0x1bc>)
 8000244:	681b      	ldr	r3, [r3, #0]
 8000246:	f442 1280 	orr.w	r2, r2, #1048576	; 0x100000
 800024a:	615a      	str	r2, [r3, #20]
}
 800024c:	e09a      	b.n	8000384 <GPIO_PCLKControl+0x1b0>
	 }else if(pGPIOx == GPIOE)
 800024e:	687b      	ldr	r3, [r7, #4]
 8000250:	4a53      	ldr	r2, [pc, #332]	; (80003a0 <GPIO_PCLKControl+0x1cc>)
 8000252:	4293      	cmp	r3, r2
 8000254:	d108      	bne.n	8000268 <GPIO_PCLKControl+0x94>
	    GPIOE_PCLK_EN();
 8000256:	4b4e      	ldr	r3, [pc, #312]	; (8000390 <GPIO_PCLKControl+0x1bc>)
 8000258:	681b      	ldr	r3, [r3, #0]
 800025a:	695a      	ldr	r2, [r3, #20]
 800025c:	4b4c      	ldr	r3, [pc, #304]	; (8000390 <GPIO_PCLKControl+0x1bc>)
 800025e:	681b      	ldr	r3, [r3, #0]
 8000260:	f442 1200 	orr.w	r2, r2, #2097152	; 0x200000
 8000264:	615a      	str	r2, [r3, #20]
}
 8000266:	e08d      	b.n	8000384 <GPIO_PCLKControl+0x1b0>
	  }else if(pGPIOx == GPIOF)
 8000268:	687b      	ldr	r3, [r7, #4]
 800026a:	4a4e      	ldr	r2, [pc, #312]	; (80003a4 <GPIO_PCLKControl+0x1d0>)
 800026c:	4293      	cmp	r3, r2
 800026e:	d108      	bne.n	8000282 <GPIO_PCLKControl+0xae>
		GPIOF_PCLK_EN();
 8000270:	4b47      	ldr	r3, [pc, #284]	; (8000390 <GPIO_PCLKControl+0x1bc>)
 8000272:	681b      	ldr	r3, [r3, #0]
 8000274:	695a      	ldr	r2, [r3, #20]
 8000276:	4b46      	ldr	r3, [pc, #280]	; (8000390 <GPIO_PCLKControl+0x1bc>)
 8000278:	681b      	ldr	r3, [r3, #0]
 800027a:	f442 0280 	orr.w	r2, r2, #4194304	; 0x400000
 800027e:	615a      	str	r2, [r3, #20]
}
 8000280:	e080      	b.n	8000384 <GPIO_PCLKControl+0x1b0>
	  }else if(pGPIOx == GPIOG)
 8000282:	687b      	ldr	r3, [r7, #4]
 8000284:	4a48      	ldr	r2, [pc, #288]	; (80003a8 <GPIO_PCLKControl+0x1d4>)
 8000286:	4293      	cmp	r3, r2
 8000288:	d108      	bne.n	800029c <GPIO_PCLKControl+0xc8>
	      GPIOG_PCLK_EN();
 800028a:	4b41      	ldr	r3, [pc, #260]	; (8000390 <GPIO_PCLKControl+0x1bc>)
 800028c:	681b      	ldr	r3, [r3, #0]
 800028e:	695a      	ldr	r2, [r3, #20]
 8000290:	4b3f      	ldr	r3, [pc, #252]	; (8000390 <GPIO_PCLKControl+0x1bc>)
 8000292:	681b      	ldr	r3, [r3, #0]
 8000294:	f442 0200 	orr.w	r2, r2, #8388608	; 0x800000
 8000298:	615a      	str	r2, [r3, #20]
}
 800029a:	e073      	b.n	8000384 <GPIO_PCLKControl+0x1b0>
	  }else if(pGPIOx == GPIOH)
 800029c:	687b      	ldr	r3, [r7, #4]
 800029e:	4a43      	ldr	r2, [pc, #268]	; (80003ac <GPIO_PCLKControl+0x1d8>)
 80002a0:	4293      	cmp	r3, r2
 80002a2:	d16f      	bne.n	8000384 <GPIO_PCLKControl+0x1b0>
	      GPIOH_PCLK_EN();
 80002a4:	4b3a      	ldr	r3, [pc, #232]	; (8000390 <GPIO_PCLKControl+0x1bc>)
 80002a6:	681b      	ldr	r3, [r3, #0]
 80002a8:	695a      	ldr	r2, [r3, #20]
 80002aa:	4b39      	ldr	r3, [pc, #228]	; (8000390 <GPIO_PCLKControl+0x1bc>)
 80002ac:	681b      	ldr	r3, [r3, #0]
 80002ae:	f442 3280 	orr.w	r2, r2, #65536	; 0x10000
 80002b2:	615a      	str	r2, [r3, #20]
}
 80002b4:	e066      	b.n	8000384 <GPIO_PCLKControl+0x1b0>
	 if(pGPIOx ==GPIOA)
 80002b6:	687b      	ldr	r3, [r7, #4]
 80002b8:	f1b3 4f90 	cmp.w	r3, #1207959552	; 0x48000000
 80002bc:	d108      	bne.n	80002d0 <GPIO_PCLKControl+0xfc>
		GPIOA_PCLK_DI();
 80002be:	4b34      	ldr	r3, [pc, #208]	; (8000390 <GPIO_PCLKControl+0x1bc>)
 80002c0:	681b      	ldr	r3, [r3, #0]
 80002c2:	695a      	ldr	r2, [r3, #20]
 80002c4:	4b32      	ldr	r3, [pc, #200]	; (8000390 <GPIO_PCLKControl+0x1bc>)
 80002c6:	681b      	ldr	r3, [r3, #0]
 80002c8:	f422 3200 	bic.w	r2, r2, #131072	; 0x20000
 80002cc:	615a      	str	r2, [r3, #20]
}
 80002ce:	e059      	b.n	8000384 <GPIO_PCLKControl+0x1b0>
	 }else if(pGPIOx == GPIOB)
 80002d0:	687b      	ldr	r3, [r7, #4]
 80002d2:	4a30      	ldr	r2, [pc, #192]	; (8000394 <GPIO_PCLKControl+0x1c0>)
 80002d4:	4293      	cmp	r3, r2
 80002d6:	d108      	bne.n	80002ea <GPIO_PCLKControl+0x116>
		GPIOB_PCLK_DI();
 80002d8:	4b2d      	ldr	r3, [pc, #180]	; (8000390 <GPIO_PCLKControl+0x1bc>)
 80002da:	681b      	ldr	r3, [r3, #0]
 80002dc:	695a      	ldr	r2, [r3, #20]
 80002de:	4b2c      	ldr	r3, [pc, #176]	; (8000390 <GPIO_PCLKControl+0x1bc>)
 80002e0:	681b      	ldr	r3, [r3, #0]
 80002e2:	f422 2280 	bic.w	r2, r2, #262144	; 0x40000
 80002e6:	615a      	str	r2, [r3, #20]
}
 80002e8:	e04c      	b.n	8000384 <GPIO_PCLKControl+0x1b0>
	 }else if(pGPIOx == GPIOC)
 80002ea:	687b      	ldr	r3, [r7, #4]
 80002ec:	4a2a      	ldr	r2, [pc, #168]	; (8000398 <GPIO_PCLKControl+0x1c4>)
 80002ee:	4293      	cmp	r3, r2
 80002f0:	d108      	bne.n	8000304 <GPIO_PCLKControl+0x130>
		GPIOC_PCLK_DI();
 80002f2:	4b27      	ldr	r3, [pc, #156]	; (8000390 <GPIO_PCLKControl+0x1bc>)
 80002f4:	681b      	ldr	r3, [r3, #0]
 80002f6:	695a      	ldr	r2, [r3, #20]
 80002f8:	4b25      	ldr	r3, [pc, #148]	; (8000390 <GPIO_PCLKControl+0x1bc>)
 80002fa:	681b      	ldr	r3, [r3, #0]
 80002fc:	f422 2200 	bic.w	r2, r2, #524288	; 0x80000
 8000300:	615a      	str	r2, [r3, #20]
}
 8000302:	e03f      	b.n	8000384 <GPIO_PCLKControl+0x1b0>
	 } else if(pGPIOx == GPIOD)
 8000304:	687b      	ldr	r3, [r7, #4]
 8000306:	4a25      	ldr	r2, [pc, #148]	; (800039c <GPIO_PCLKControl+0x1c8>)
 8000308:	4293      	cmp	r3, r2
 800030a:	d108      	bne.n	800031e <GPIO_PCLKControl+0x14a>
		GPIOD_PCLK_DI();
 800030c:	4b20      	ldr	r3, [pc, #128]	; (8000390 <GPIO_PCLKControl+0x1bc>)
 800030e:	681b      	ldr	r3, [r3, #0]
 8000310:	695a      	ldr	r2, [r3, #20]
 8000312:	4b1f      	ldr	r3, [pc, #124]	; (8000390 <GPIO_PCLKControl+0x1bc>)
 8000314:	681b      	ldr	r3, [r3, #0]
 8000316:	f422 1280 	bic.w	r2, r2, #1048576	; 0x100000
 800031a:	615a      	str	r2, [r3, #20]
}
 800031c:	e032      	b.n	8000384 <GPIO_PCLKControl+0x1b0>
	 }else if(pGPIOx == GPIOE)
 800031e:	687b      	ldr	r3, [r7, #4]
 8000320:	4a1f      	ldr	r2, [pc, #124]	; (80003a0 <GPIO_PCLKControl+0x1cc>)
 8000322:	4293      	cmp	r3, r2
 8000324:	d108      	bne.n	8000338 <GPIO_PCLKControl+0x164>
	    GPIOE_PCLK_DI();
 8000326:	4b1a      	ldr	r3, [pc, #104]	; (8000390 <GPIO_PCLKControl+0x1bc>)
 8000328:	681b      	ldr	r3, [r3, #0]
 800032a:	695a      	ldr	r2, [r3, #20]
 800032c:	4b18      	ldr	r3, [pc, #96]	; (8000390 <GPIO_PCLKControl+0x1bc>)
 800032e:	681b      	ldr	r3, [r3, #0]
 8000330:	f422 1200 	bic.w	r2, r2, #2097152	; 0x200000
 8000334:	615a      	str	r2, [r3, #20]
}
 8000336:	e025      	b.n	8000384 <GPIO_PCLKControl+0x1b0>
	  }else if(pGPIOx == GPIOF)
 8000338:	687b      	ldr	r3, [r7, #4]
 800033a:	4a1a      	ldr	r2, [pc, #104]	; (80003a4 <GPIO_PCLKControl+0x1d0>)
 800033c:	4293      	cmp	r3, r2
 800033e:	d108      	bne.n	8000352 <GPIO_PCLKControl+0x17e>
		GPIOF_PCLK_DI();
 8000340:	4b13      	ldr	r3, [pc, #76]	; (8000390 <GPIO_PCLKControl+0x1bc>)
 8000342:	681b      	ldr	r3, [r3, #0]
 8000344:	695a      	ldr	r2, [r3, #20]
 8000346:	4b12      	ldr	r3, [pc, #72]	; (8000390 <GPIO_PCLKControl+0x1bc>)
 8000348:	681b      	ldr	r3, [r3, #0]
 800034a:	f422 0280 	bic.w	r2, r2, #4194304	; 0x400000
 800034e:	615a      	str	r2, [r3, #20]
}
 8000350:	e018      	b.n	8000384 <GPIO_PCLKControl+0x1b0>
	  }else if(pGPIOx == GPIOG)
 8000352:	687b      	ldr	r3, [r7, #4]
 8000354:	4a14      	ldr	r2, [pc, #80]	; (80003a8 <GPIO_PCLKControl+0x1d4>)
 8000356:	4293      	cmp	r3, r2
 8000358:	d108      	bne.n	800036c <GPIO_PCLKControl+0x198>
	      GPIOG_PCLK_DI();
 800035a:	4b0d      	ldr	r3, [pc, #52]	; (8000390 <GPIO_PCLKControl+0x1bc>)
 800035c:	681b      	ldr	r3, [r3, #0]
 800035e:	695a      	ldr	r2, [r3, #20]
 8000360:	4b0b      	ldr	r3, [pc, #44]	; (8000390 <GPIO_PCLKControl+0x1bc>)
 8000362:	681b      	ldr	r3, [r3, #0]
 8000364:	f422 0200 	bic.w	r2, r2, #8388608	; 0x800000
 8000368:	615a      	str	r2, [r3, #20]
}
 800036a:	e00b      	b.n	8000384 <GPIO_PCLKControl+0x1b0>
	  }else if(pGPIOx == GPIOH)
 800036c:	687b      	ldr	r3, [r7, #4]
 800036e:	4a0f      	ldr	r2, [pc, #60]	; (80003ac <GPIO_PCLKControl+0x1d8>)
 8000370:	4293      	cmp	r3, r2
 8000372:	d107      	bne.n	8000384 <GPIO_PCLKControl+0x1b0>
	      GPIOH_PCLK_DI();
 8000374:	4b06      	ldr	r3, [pc, #24]	; (8000390 <GPIO_PCLKControl+0x1bc>)
 8000376:	681b      	ldr	r3, [r3, #0]
 8000378:	695a      	ldr	r2, [r3, #20]
 800037a:	4b05      	ldr	r3, [pc, #20]	; (8000390 <GPIO_PCLKControl+0x1bc>)
 800037c:	681b      	ldr	r3, [r3, #0]
 800037e:	f422 3280 	bic.w	r2, r2, #65536	; 0x10000
 8000382:	615a      	str	r2, [r3, #20]
}
 8000384:	bf00      	nop
 8000386:	370c      	adds	r7, #12
 8000388:	46bd      	mov	sp, r7
 800038a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800038e:	4770      	bx	lr
 8000390:	20000000 	.word	0x20000000
 8000394:	48000400 	.word	0x48000400
 8000398:	48000800 	.word	0x48000800
 800039c:	48000c00 	.word	0x48000c00
 80003a0:	48001000 	.word	0x48001000
 80003a4:	48001400 	.word	0x48001400
 80003a8:	48001800 	.word	0x48001800
 80003ac:	48001c00 	.word	0x48001c00

080003b0 <GPIO_Init>:
 *   Inputs		:  Pointer to GPIO handle.
 * Output/return:  None.
 * =====================================================================================
 */
void GPIO_Init(GPIO_Handle_t *pGPIOHandle)
{
 80003b0:	b480      	push	{r7}
 80003b2:	b085      	sub	sp, #20
 80003b4:	af00      	add	r7, sp, #0
 80003b6:	6078      	str	r0, [r7, #4]
	uint32_t temp=0;
 80003b8:	2300      	movs	r3, #0
 80003ba:	60fb      	str	r3, [r7, #12]
//configure the mode

	if(pGPIOHandle->GPIO_Pin_Config.GPIO_PinMode <= GPIO_MODE_ANALOG)
 80003bc:	687b      	ldr	r3, [r7, #4]
 80003be:	795b      	ldrb	r3, [r3, #5]
 80003c0:	2b03      	cmp	r3, #3
 80003c2:	d821      	bhi.n	8000408 <GPIO_Init+0x58>
	{
		//non interrupt mode
		temp = (pGPIOHandle->GPIO_Pin_Config.GPIO_PinMode << (2 * pGPIOHandle->GPIO_Pin_Config.GPIO_PinNum));
 80003c4:	687b      	ldr	r3, [r7, #4]
 80003c6:	795b      	ldrb	r3, [r3, #5]
 80003c8:	461a      	mov	r2, r3
 80003ca:	687b      	ldr	r3, [r7, #4]
 80003cc:	791b      	ldrb	r3, [r3, #4]
 80003ce:	005b      	lsls	r3, r3, #1
 80003d0:	fa02 f303 	lsl.w	r3, r2, r3
 80003d4:	60fb      	str	r3, [r7, #12]
		pGPIOHandle->pGPIOx->MODER &= ~ (0x3 << (2 * pGPIOHandle->GPIO_Pin_Config.GPIO_PinNum) );
 80003d6:	687b      	ldr	r3, [r7, #4]
 80003d8:	681b      	ldr	r3, [r3, #0]
 80003da:	681a      	ldr	r2, [r3, #0]
 80003dc:	687b      	ldr	r3, [r7, #4]
 80003de:	791b      	ldrb	r3, [r3, #4]
 80003e0:	005b      	lsls	r3, r3, #1
 80003e2:	2103      	movs	r1, #3
 80003e4:	fa01 f303 	lsl.w	r3, r1, r3
 80003e8:	43db      	mvns	r3, r3
 80003ea:	4619      	mov	r1, r3
 80003ec:	687b      	ldr	r3, [r7, #4]
 80003ee:	681b      	ldr	r3, [r3, #0]
 80003f0:	400a      	ands	r2, r1
 80003f2:	601a      	str	r2, [r3, #0]
		pGPIOHandle->pGPIOx->MODER |= temp;
 80003f4:	687b      	ldr	r3, [r7, #4]
 80003f6:	681b      	ldr	r3, [r3, #0]
 80003f8:	6819      	ldr	r1, [r3, #0]
 80003fa:	687b      	ldr	r3, [r7, #4]
 80003fc:	681b      	ldr	r3, [r3, #0]
 80003fe:	68fa      	ldr	r2, [r7, #12]
 8000400:	430a      	orrs	r2, r1
 8000402:	601a      	str	r2, [r3, #0]
		temp=0;
 8000404:	2300      	movs	r3, #0
 8000406:	60fb      	str	r3, [r7, #12]
	else
	{
		//interrupt mode

	}
	temp = 0;
 8000408:	2300      	movs	r3, #0
 800040a:	60fb      	str	r3, [r7, #12]
//configure the speed
	temp = (pGPIOHandle->GPIO_Pin_Config.GPIO_PinSpeed << (2 * pGPIOHandle->GPIO_Pin_Config.GPIO_PinNum));
 800040c:	687b      	ldr	r3, [r7, #4]
 800040e:	799b      	ldrb	r3, [r3, #6]
 8000410:	461a      	mov	r2, r3
 8000412:	687b      	ldr	r3, [r7, #4]
 8000414:	791b      	ldrb	r3, [r3, #4]
 8000416:	005b      	lsls	r3, r3, #1
 8000418:	fa02 f303 	lsl.w	r3, r2, r3
 800041c:	60fb      	str	r3, [r7, #12]
	pGPIOHandle->pGPIOx->OSPEEDR &= ~ (0x3 << (2 * pGPIOHandle->GPIO_Pin_Config.GPIO_PinNum) );
 800041e:	687b      	ldr	r3, [r7, #4]
 8000420:	681b      	ldr	r3, [r3, #0]
 8000422:	689a      	ldr	r2, [r3, #8]
 8000424:	687b      	ldr	r3, [r7, #4]
 8000426:	791b      	ldrb	r3, [r3, #4]
 8000428:	005b      	lsls	r3, r3, #1
 800042a:	2103      	movs	r1, #3
 800042c:	fa01 f303 	lsl.w	r3, r1, r3
 8000430:	43db      	mvns	r3, r3
 8000432:	4619      	mov	r1, r3
 8000434:	687b      	ldr	r3, [r7, #4]
 8000436:	681b      	ldr	r3, [r3, #0]
 8000438:	400a      	ands	r2, r1
 800043a:	609a      	str	r2, [r3, #8]
	pGPIOHandle->pGPIOx->OSPEEDR |= temp; //setting
 800043c:	687b      	ldr	r3, [r7, #4]
 800043e:	681b      	ldr	r3, [r3, #0]
 8000440:	6899      	ldr	r1, [r3, #8]
 8000442:	687b      	ldr	r3, [r7, #4]
 8000444:	681b      	ldr	r3, [r3, #0]
 8000446:	68fa      	ldr	r2, [r7, #12]
 8000448:	430a      	orrs	r2, r1
 800044a:	609a      	str	r2, [r3, #8]
	temp=0;
 800044c:	2300      	movs	r3, #0
 800044e:	60fb      	str	r3, [r7, #12]
//configure the pupd settings
	temp = (pGPIOHandle->GPIO_Pin_Config.GPIO_PinPuPdCntrl << (2 * pGPIOHandle->GPIO_Pin_Config.GPIO_PinNum));
 8000450:	687b      	ldr	r3, [r7, #4]
 8000452:	7a1b      	ldrb	r3, [r3, #8]
 8000454:	461a      	mov	r2, r3
 8000456:	687b      	ldr	r3, [r7, #4]
 8000458:	791b      	ldrb	r3, [r3, #4]
 800045a:	005b      	lsls	r3, r3, #1
 800045c:	fa02 f303 	lsl.w	r3, r2, r3
 8000460:	60fb      	str	r3, [r7, #12]
	pGPIOHandle->pGPIOx->PUPDR &= ~ (0x3 << (2 * pGPIOHandle->GPIO_Pin_Config.GPIO_PinNum) );
 8000462:	687b      	ldr	r3, [r7, #4]
 8000464:	681b      	ldr	r3, [r3, #0]
 8000466:	68da      	ldr	r2, [r3, #12]
 8000468:	687b      	ldr	r3, [r7, #4]
 800046a:	791b      	ldrb	r3, [r3, #4]
 800046c:	005b      	lsls	r3, r3, #1
 800046e:	2103      	movs	r1, #3
 8000470:	fa01 f303 	lsl.w	r3, r1, r3
 8000474:	43db      	mvns	r3, r3
 8000476:	4619      	mov	r1, r3
 8000478:	687b      	ldr	r3, [r7, #4]
 800047a:	681b      	ldr	r3, [r3, #0]
 800047c:	400a      	ands	r2, r1
 800047e:	60da      	str	r2, [r3, #12]
	pGPIOHandle->pGPIOx->PUPDR |= temp;
 8000480:	687b      	ldr	r3, [r7, #4]
 8000482:	681b      	ldr	r3, [r3, #0]
 8000484:	68d9      	ldr	r1, [r3, #12]
 8000486:	687b      	ldr	r3, [r7, #4]
 8000488:	681b      	ldr	r3, [r3, #0]
 800048a:	68fa      	ldr	r2, [r7, #12]
 800048c:	430a      	orrs	r2, r1
 800048e:	60da      	str	r2, [r3, #12]
	temp =0;
 8000490:	2300      	movs	r3, #0
 8000492:	60fb      	str	r3, [r7, #12]
//configure output type
	temp = (pGPIOHandle->GPIO_Pin_Config.GPIO_PinOType << (pGPIOHandle->GPIO_Pin_Config.GPIO_PinNum));
 8000494:	687b      	ldr	r3, [r7, #4]
 8000496:	79db      	ldrb	r3, [r3, #7]
 8000498:	461a      	mov	r2, r3
 800049a:	687b      	ldr	r3, [r7, #4]
 800049c:	791b      	ldrb	r3, [r3, #4]
 800049e:	fa02 f303 	lsl.w	r3, r2, r3
 80004a2:	60fb      	str	r3, [r7, #12]
	pGPIOHandle->pGPIOx->OTYPER &= ~ (0x1 << pGPIOHandle->GPIO_Pin_Config.GPIO_PinNum );
 80004a4:	687b      	ldr	r3, [r7, #4]
 80004a6:	681b      	ldr	r3, [r3, #0]
 80004a8:	685a      	ldr	r2, [r3, #4]
 80004aa:	687b      	ldr	r3, [r7, #4]
 80004ac:	791b      	ldrb	r3, [r3, #4]
 80004ae:	4619      	mov	r1, r3
 80004b0:	2301      	movs	r3, #1
 80004b2:	408b      	lsls	r3, r1
 80004b4:	43db      	mvns	r3, r3
 80004b6:	4619      	mov	r1, r3
 80004b8:	687b      	ldr	r3, [r7, #4]
 80004ba:	681b      	ldr	r3, [r3, #0]
 80004bc:	400a      	ands	r2, r1
 80004be:	605a      	str	r2, [r3, #4]
	pGPIOHandle->pGPIOx->OTYPER |= temp;
 80004c0:	687b      	ldr	r3, [r7, #4]
 80004c2:	681b      	ldr	r3, [r3, #0]
 80004c4:	6859      	ldr	r1, [r3, #4]
 80004c6:	687b      	ldr	r3, [r7, #4]
 80004c8:	681b      	ldr	r3, [r3, #0]
 80004ca:	68fa      	ldr	r2, [r7, #12]
 80004cc:	430a      	orrs	r2, r1
 80004ce:	605a      	str	r2, [r3, #4]
	temp=0;
 80004d0:	2300      	movs	r3, #0
 80004d2:	60fb      	str	r3, [r7, #12]
//configure the alternate functionalities
	if(pGPIOHandle->GPIO_Pin_Config.GPIO_PinMode == GPIO_MODE_AF)
 80004d4:	687b      	ldr	r3, [r7, #4]
 80004d6:	795b      	ldrb	r3, [r3, #5]
 80004d8:	2b02      	cmp	r3, #2
 80004da:	d131      	bne.n	8000540 <GPIO_Init+0x190>
	{
		uint8_t temp1, temp2;
		temp1= (pGPIOHandle->GPIO_Pin_Config.GPIO_PinNum)/8;
 80004dc:	687b      	ldr	r3, [r7, #4]
 80004de:	791b      	ldrb	r3, [r3, #4]
 80004e0:	08db      	lsrs	r3, r3, #3
 80004e2:	72fb      	strb	r3, [r7, #11]
		temp2= (pGPIOHandle->GPIO_Pin_Config.GPIO_PinNum)%8;
 80004e4:	687b      	ldr	r3, [r7, #4]
 80004e6:	791b      	ldrb	r3, [r3, #4]
 80004e8:	f003 0307 	and.w	r3, r3, #7
 80004ec:	72bb      	strb	r3, [r7, #10]
		pGPIOHandle->pGPIOx->AFR[temp1] &= ~( 0xF << (temp2 * 4 ));
 80004ee:	687b      	ldr	r3, [r7, #4]
 80004f0:	681b      	ldr	r3, [r3, #0]
 80004f2:	7afa      	ldrb	r2, [r7, #11]
 80004f4:	3208      	adds	r2, #8
 80004f6:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 80004fa:	7abb      	ldrb	r3, [r7, #10]
 80004fc:	009b      	lsls	r3, r3, #2
 80004fe:	220f      	movs	r2, #15
 8000500:	fa02 f303 	lsl.w	r3, r2, r3
 8000504:	43db      	mvns	r3, r3
 8000506:	4618      	mov	r0, r3
 8000508:	687b      	ldr	r3, [r7, #4]
 800050a:	681b      	ldr	r3, [r3, #0]
 800050c:	7afa      	ldrb	r2, [r7, #11]
 800050e:	4001      	ands	r1, r0
 8000510:	3208      	adds	r2, #8
 8000512:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
		pGPIOHandle->pGPIOx->AFR[temp1] |= ( pGPIOHandle->GPIO_Pin_Config.GPIO_PinAFmode << (temp2 * 4 ));
 8000516:	687b      	ldr	r3, [r7, #4]
 8000518:	681b      	ldr	r3, [r3, #0]
 800051a:	7afa      	ldrb	r2, [r7, #11]
 800051c:	3208      	adds	r2, #8
 800051e:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 8000522:	687b      	ldr	r3, [r7, #4]
 8000524:	7a5b      	ldrb	r3, [r3, #9]
 8000526:	461a      	mov	r2, r3
 8000528:	7abb      	ldrb	r3, [r7, #10]
 800052a:	009b      	lsls	r3, r3, #2
 800052c:	fa02 f303 	lsl.w	r3, r2, r3
 8000530:	4618      	mov	r0, r3
 8000532:	687b      	ldr	r3, [r7, #4]
 8000534:	681b      	ldr	r3, [r3, #0]
 8000536:	7afa      	ldrb	r2, [r7, #11]
 8000538:	4301      	orrs	r1, r0
 800053a:	3208      	adds	r2, #8
 800053c:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
	}


}
 8000540:	bf00      	nop
 8000542:	3714      	adds	r7, #20
 8000544:	46bd      	mov	sp, r7
 8000546:	f85d 7b04 	ldr.w	r7, [sp], #4
 800054a:	4770      	bx	lr

0800054c <GPIO_ReadInputPin>:
 *   Inputs		:  Pointer to the base address of gpio port, pin number
 * Output/return:  if the pin is high or low. 0 or 1
 * =====================================================================================
 */
uint8_t  GPIO_ReadInputPin(GPIO_Reg_Def_t *pGPIOx, uint8_t PinNum)
{
 800054c:	b480      	push	{r7}
 800054e:	b085      	sub	sp, #20
 8000550:	af00      	add	r7, sp, #0
 8000552:	6078      	str	r0, [r7, #4]
 8000554:	460b      	mov	r3, r1
 8000556:	70fb      	strb	r3, [r7, #3]
	uint8_t val;
	val = (uint8_t) (pGPIOx->IDR >>PinNum) & 0x00000001;
 8000558:	687b      	ldr	r3, [r7, #4]
 800055a:	691a      	ldr	r2, [r3, #16]
 800055c:	78fb      	ldrb	r3, [r7, #3]
 800055e:	fa22 f303 	lsr.w	r3, r2, r3
 8000562:	b2db      	uxtb	r3, r3
 8000564:	f003 0301 	and.w	r3, r3, #1
 8000568:	73fb      	strb	r3, [r7, #15]
	return val;
 800056a:	7bfb      	ldrb	r3, [r7, #15]
}
 800056c:	4618      	mov	r0, r3
 800056e:	3714      	adds	r7, #20
 8000570:	46bd      	mov	sp, r7
 8000572:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000576:	4770      	bx	lr

08000578 <GPIO_ToggleOutPin>:
 *   Inputs		:  Pointer to GPIO port base address and pin number.
 * Output/return:  None.
 * =====================================================================================
 */
void GPIO_ToggleOutPin(GPIO_Reg_Def_t *pGPIOx, uint8_t pinNum)
{
 8000578:	b480      	push	{r7}
 800057a:	b083      	sub	sp, #12
 800057c:	af00      	add	r7, sp, #0
 800057e:	6078      	str	r0, [r7, #4]
 8000580:	460b      	mov	r3, r1
 8000582:	70fb      	strb	r3, [r7, #3]
	(pGPIOx->ODR) ^= (1 << pinNum);
 8000584:	687b      	ldr	r3, [r7, #4]
 8000586:	695b      	ldr	r3, [r3, #20]
 8000588:	78fa      	ldrb	r2, [r7, #3]
 800058a:	2101      	movs	r1, #1
 800058c:	fa01 f202 	lsl.w	r2, r1, r2
 8000590:	405a      	eors	r2, r3
 8000592:	687b      	ldr	r3, [r7, #4]
 8000594:	615a      	str	r2, [r3, #20]
}
 8000596:	bf00      	nop
 8000598:	370c      	adds	r7, #12
 800059a:	46bd      	mov	sp, r7
 800059c:	f85d 7b04 	ldr.w	r7, [sp], #4
 80005a0:	4770      	bx	lr
	...

080005a4 <delay>:
#include <stdint.h>

#define BUTTON_PRESSED DISABLE

void delay()
{
 80005a4:	b480      	push	{r7}
 80005a6:	b083      	sub	sp, #12
 80005a8:	af00      	add	r7, sp, #0
	for (int i=0; i<500000/2; i++)
 80005aa:	2300      	movs	r3, #0
 80005ac:	607b      	str	r3, [r7, #4]
 80005ae:	e002      	b.n	80005b6 <delay+0x12>
 80005b0:	687b      	ldr	r3, [r7, #4]
 80005b2:	3301      	adds	r3, #1
 80005b4:	607b      	str	r3, [r7, #4]
 80005b6:	687b      	ldr	r3, [r7, #4]
 80005b8:	4a04      	ldr	r2, [pc, #16]	; (80005cc <delay+0x28>)
 80005ba:	4293      	cmp	r3, r2
 80005bc:	ddf8      	ble.n	80005b0 <delay+0xc>
	{

	}
}
 80005be:	bf00      	nop
 80005c0:	bf00      	nop
 80005c2:	370c      	adds	r7, #12
 80005c4:	46bd      	mov	sp, r7
 80005c6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80005ca:	4770      	bx	lr
 80005cc:	0003d08f 	.word	0x0003d08f

080005d0 <main>:
int main(void)
{
 80005d0:	b580      	push	{r7, lr}
 80005d2:	b086      	sub	sp, #24
 80005d4:	af00      	add	r7, sp, #0
	GPIO_Handle_t GpioLed;   	//handle for led
	GPIO_Handle_t GpioButton;   //handle for button
	//led handle init
	GpioLed.pGPIOx = GPIOA;
 80005d6:	f04f 4390 	mov.w	r3, #1207959552	; 0x48000000
 80005da:	60fb      	str	r3, [r7, #12]
	GpioLed.GPIO_Pin_Config.GPIO_PinNum = GPIO_PIN_5;
 80005dc:	2305      	movs	r3, #5
 80005de:	743b      	strb	r3, [r7, #16]
	GpioLed.GPIO_Pin_Config.GPIO_PinMode = GPIO_MODE_OUTPUT;
 80005e0:	2301      	movs	r3, #1
 80005e2:	747b      	strb	r3, [r7, #17]
	GpioLed.GPIO_Pin_Config.GPIO_PinOType = GPIO_OUT_TYPE_PP;
 80005e4:	2300      	movs	r3, #0
 80005e6:	74fb      	strb	r3, [r7, #19]
	GpioLed.GPIO_Pin_Config.GPIO_PinSpeed = GPIO_OUT_SPEED_HIGH;
 80005e8:	2303      	movs	r3, #3
 80005ea:	74bb      	strb	r3, [r7, #18]
	GpioLed.GPIO_Pin_Config.GPIO_PinPuPdCntrl = GPIO_PUPDR_NPUPD;
 80005ec:	2300      	movs	r3, #0
 80005ee:	753b      	strb	r3, [r7, #20]
	//Button handle init

	GpioButton.pGPIOx = GPIOC;
 80005f0:	4b15      	ldr	r3, [pc, #84]	; (8000648 <main+0x78>)
 80005f2:	603b      	str	r3, [r7, #0]
	GpioButton.GPIO_Pin_Config.GPIO_PinNum = GPIO_PIN_13;
 80005f4:	230d      	movs	r3, #13
 80005f6:	713b      	strb	r3, [r7, #4]
	GpioButton.GPIO_Pin_Config.GPIO_PinMode = GPIO_MODE_INPUT;
 80005f8:	2300      	movs	r3, #0
 80005fa:	717b      	strb	r3, [r7, #5]
	GpioButton.GPIO_Pin_Config.GPIO_PinSpeed = GPIO_OUT_SPEED_HIGH;
 80005fc:	2303      	movs	r3, #3
 80005fe:	71bb      	strb	r3, [r7, #6]
	GpioButton.GPIO_Pin_Config.GPIO_PinPuPdCntrl = GPIO_PUPDR_NPUPD;
 8000600:	2300      	movs	r3, #0
 8000602:	723b      	strb	r3, [r7, #8]
	//enable clock
	GPIO_PCLKControl(GPIOC, ENABLE);
 8000604:	2101      	movs	r1, #1
 8000606:	4810      	ldr	r0, [pc, #64]	; (8000648 <main+0x78>)
 8000608:	f7ff fde4 	bl	80001d4 <GPIO_PCLKControl>
	GPIO_PCLKControl(GPIOA, ENABLE);
 800060c:	2101      	movs	r1, #1
 800060e:	f04f 4090 	mov.w	r0, #1207959552	; 0x48000000
 8000612:	f7ff fddf 	bl	80001d4 <GPIO_PCLKControl>

	GPIO_Init(&GpioButton);
 8000616:	463b      	mov	r3, r7
 8000618:	4618      	mov	r0, r3
 800061a:	f7ff fec9 	bl	80003b0 <GPIO_Init>
	GPIO_Init(&GpioLed);
 800061e:	f107 030c 	add.w	r3, r7, #12
 8000622:	4618      	mov	r0, r3
 8000624:	f7ff fec4 	bl	80003b0 <GPIO_Init>

	/* Loop forever */
	while(1)
	{
		if(GPIO_ReadInputPin(GPIOC, GPIO_PIN_13) == BUTTON_PRESSED)
 8000628:	210d      	movs	r1, #13
 800062a:	4807      	ldr	r0, [pc, #28]	; (8000648 <main+0x78>)
 800062c:	f7ff ff8e 	bl	800054c <GPIO_ReadInputPin>
 8000630:	4603      	mov	r3, r0
 8000632:	2b00      	cmp	r3, #0
 8000634:	d1f8      	bne.n	8000628 <main+0x58>
		{
			delay();
 8000636:	f7ff ffb5 	bl	80005a4 <delay>
			GPIO_ToggleOutPin(GPIOA, GPIO_PIN_5); //toggle pin
 800063a:	2105      	movs	r1, #5
 800063c:	f04f 4090 	mov.w	r0, #1207959552	; 0x48000000
 8000640:	f7ff ff9a 	bl	8000578 <GPIO_ToggleOutPin>
		if(GPIO_ReadInputPin(GPIOC, GPIO_PIN_13) == BUTTON_PRESSED)
 8000644:	e7f0      	b.n	8000628 <main+0x58>
 8000646:	bf00      	nop
 8000648:	48000800 	.word	0x48000800

0800064c <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 800064c:	480d      	ldr	r0, [pc, #52]	; (8000684 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 800064e:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 8000650:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8000654:	480c      	ldr	r0, [pc, #48]	; (8000688 <LoopForever+0x6>)
  ldr r1, =_edata
 8000656:	490d      	ldr	r1, [pc, #52]	; (800068c <LoopForever+0xa>)
  ldr r2, =_sidata
 8000658:	4a0d      	ldr	r2, [pc, #52]	; (8000690 <LoopForever+0xe>)
  movs r3, #0
 800065a:	2300      	movs	r3, #0
  b LoopCopyDataInit
 800065c:	e002      	b.n	8000664 <LoopCopyDataInit>

0800065e <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 800065e:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8000660:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 8000662:	3304      	adds	r3, #4

08000664 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8000664:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 8000666:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8000668:	d3f9      	bcc.n	800065e <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 800066a:	4a0a      	ldr	r2, [pc, #40]	; (8000694 <LoopForever+0x12>)
  ldr r4, =_ebss
 800066c:	4c0a      	ldr	r4, [pc, #40]	; (8000698 <LoopForever+0x16>)
  movs r3, #0
 800066e:	2300      	movs	r3, #0
  b LoopFillZerobss
 8000670:	e001      	b.n	8000676 <LoopFillZerobss>

08000672 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 8000672:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8000674:	3204      	adds	r2, #4

08000676 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 8000676:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8000678:	d3fb      	bcc.n	8000672 <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 800067a:	f000 f811 	bl	80006a0 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 800067e:	f7ff ffa7 	bl	80005d0 <main>

08000682 <LoopForever>:

LoopForever:
    b LoopForever
 8000682:	e7fe      	b.n	8000682 <LoopForever>
  ldr   r0, =_estack
 8000684:	20010000 	.word	0x20010000
  ldr r0, =_sdata
 8000688:	20000000 	.word	0x20000000
  ldr r1, =_edata
 800068c:	20000004 	.word	0x20000004
  ldr r2, =_sidata
 8000690:	08000708 	.word	0x08000708
  ldr r2, =_sbss
 8000694:	20000004 	.word	0x20000004
  ldr r4, =_ebss
 8000698:	20000020 	.word	0x20000020

0800069c <ADC1_2_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 800069c:	e7fe      	b.n	800069c <ADC1_2_IRQHandler>
	...

080006a0 <__libc_init_array>:
 80006a0:	b570      	push	{r4, r5, r6, lr}
 80006a2:	4d0d      	ldr	r5, [pc, #52]	; (80006d8 <__libc_init_array+0x38>)
 80006a4:	4c0d      	ldr	r4, [pc, #52]	; (80006dc <__libc_init_array+0x3c>)
 80006a6:	1b64      	subs	r4, r4, r5
 80006a8:	10a4      	asrs	r4, r4, #2
 80006aa:	2600      	movs	r6, #0
 80006ac:	42a6      	cmp	r6, r4
 80006ae:	d109      	bne.n	80006c4 <__libc_init_array+0x24>
 80006b0:	4d0b      	ldr	r5, [pc, #44]	; (80006e0 <__libc_init_array+0x40>)
 80006b2:	4c0c      	ldr	r4, [pc, #48]	; (80006e4 <__libc_init_array+0x44>)
 80006b4:	f000 f818 	bl	80006e8 <_init>
 80006b8:	1b64      	subs	r4, r4, r5
 80006ba:	10a4      	asrs	r4, r4, #2
 80006bc:	2600      	movs	r6, #0
 80006be:	42a6      	cmp	r6, r4
 80006c0:	d105      	bne.n	80006ce <__libc_init_array+0x2e>
 80006c2:	bd70      	pop	{r4, r5, r6, pc}
 80006c4:	f855 3b04 	ldr.w	r3, [r5], #4
 80006c8:	4798      	blx	r3
 80006ca:	3601      	adds	r6, #1
 80006cc:	e7ee      	b.n	80006ac <__libc_init_array+0xc>
 80006ce:	f855 3b04 	ldr.w	r3, [r5], #4
 80006d2:	4798      	blx	r3
 80006d4:	3601      	adds	r6, #1
 80006d6:	e7f2      	b.n	80006be <__libc_init_array+0x1e>
 80006d8:	08000700 	.word	0x08000700
 80006dc:	08000700 	.word	0x08000700
 80006e0:	08000700 	.word	0x08000700
 80006e4:	08000704 	.word	0x08000704

080006e8 <_init>:
 80006e8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80006ea:	bf00      	nop
 80006ec:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80006ee:	bc08      	pop	{r3}
 80006f0:	469e      	mov	lr, r3
 80006f2:	4770      	bx	lr

080006f4 <_fini>:
 80006f4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80006f6:	bf00      	nop
 80006f8:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80006fa:	bc08      	pop	{r3}
 80006fc:	469e      	mov	lr, r3
 80006fe:	4770      	bx	lr
