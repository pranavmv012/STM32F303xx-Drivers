
stm32f303xx_Drivers.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000194  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         000008d4  08000194  08000194  00010194  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  08000a68  08000a68  0002000c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  08000a68  08000a68  0002000c  2**0
                  CONTENTS
  4 .ARM          00000000  08000a68  08000a68  0002000c  2**0
                  CONTENTS
  5 .preinit_array 00000000  08000a68  08000a68  0002000c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08000a68  08000a68  00010a68  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08000a6c  08000a6c  00010a6c  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         0000000c  20000000  08000a70  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .ccmram       00000000  10000000  10000000  0002000c  2**0
                  CONTENTS
 10 .bss          0000001c  2000000c  2000000c  0002000c  2**2
                  ALLOC
 11 ._user_heap_stack 00000600  20000028  20000028  0002000c  2**0
                  ALLOC
 12 .ARM.attributes 00000030  00000000  00000000  0002000c  2**0
                  CONTENTS, READONLY
 13 .debug_info   00001b23  00000000  00000000  0002003c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_abbrev 00000466  00000000  00000000  00021b5f  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_aranges 000000c8  00000000  00000000  00021fc8  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_ranges 000000a0  00000000  00000000  00022090  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_macro  0000234e  00000000  00000000  00022130  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_line   00001263  00000000  00000000  0002447e  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_str    00009827  00000000  00000000  000256e1  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .comment      00000053  00000000  00000000  0002ef08  2**0
                  CONTENTS, READONLY
 21 .debug_frame  00000288  00000000  00000000  0002ef5c  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000194 <__do_global_dtors_aux>:
 8000194:	b510      	push	{r4, lr}
 8000196:	4c05      	ldr	r4, [pc, #20]	; (80001ac <__do_global_dtors_aux+0x18>)
 8000198:	7823      	ldrb	r3, [r4, #0]
 800019a:	b933      	cbnz	r3, 80001aa <__do_global_dtors_aux+0x16>
 800019c:	4b04      	ldr	r3, [pc, #16]	; (80001b0 <__do_global_dtors_aux+0x1c>)
 800019e:	b113      	cbz	r3, 80001a6 <__do_global_dtors_aux+0x12>
 80001a0:	4804      	ldr	r0, [pc, #16]	; (80001b4 <__do_global_dtors_aux+0x20>)
 80001a2:	f3af 8000 	nop.w
 80001a6:	2301      	movs	r3, #1
 80001a8:	7023      	strb	r3, [r4, #0]
 80001aa:	bd10      	pop	{r4, pc}
 80001ac:	2000000c 	.word	0x2000000c
 80001b0:	00000000 	.word	0x00000000
 80001b4:	08000a50 	.word	0x08000a50

080001b8 <frame_dummy>:
 80001b8:	b508      	push	{r3, lr}
 80001ba:	4b03      	ldr	r3, [pc, #12]	; (80001c8 <frame_dummy+0x10>)
 80001bc:	b11b      	cbz	r3, 80001c6 <frame_dummy+0xe>
 80001be:	4903      	ldr	r1, [pc, #12]	; (80001cc <frame_dummy+0x14>)
 80001c0:	4803      	ldr	r0, [pc, #12]	; (80001d0 <frame_dummy+0x18>)
 80001c2:	f3af 8000 	nop.w
 80001c6:	bd08      	pop	{r3, pc}
 80001c8:	00000000 	.word	0x00000000
 80001cc:	20000010 	.word	0x20000010
 80001d0:	08000a50 	.word	0x08000a50

080001d4 <GPIO_PCLKControl>:
 *   Inputs		:  Pointer to base address of the GPIO port, Enable or disable variable
 * Output/return:  NOne.
 * =====================================================================================
 */
void GPIO_PCLKControl(GPIO_Reg_Def_t *pGPIOx, uint8_t ENorDI)
{
 80001d4:	b480      	push	{r7}
 80001d6:	b083      	sub	sp, #12
 80001d8:	af00      	add	r7, sp, #0
 80001da:	6078      	str	r0, [r7, #4]
 80001dc:	460b      	mov	r3, r1
 80001de:	70fb      	strb	r3, [r7, #3]
 if(ENorDI == ENABLE)
 80001e0:	78fb      	ldrb	r3, [r7, #3]
 80001e2:	2b01      	cmp	r3, #1
 80001e4:	d167      	bne.n	80002b6 <GPIO_PCLKControl+0xe2>
  {
	 if(pGPIOx ==GPIOA)
 80001e6:	687b      	ldr	r3, [r7, #4]
 80001e8:	f1b3 4f90 	cmp.w	r3, #1207959552	; 0x48000000
 80001ec:	d108      	bne.n	8000200 <GPIO_PCLKControl+0x2c>
	 {
		GPIOA_PCLK_EN();
 80001ee:	4b68      	ldr	r3, [pc, #416]	; (8000390 <GPIO_PCLKControl+0x1bc>)
 80001f0:	681b      	ldr	r3, [r3, #0]
 80001f2:	695a      	ldr	r2, [r3, #20]
 80001f4:	4b66      	ldr	r3, [pc, #408]	; (8000390 <GPIO_PCLKControl+0x1bc>)
 80001f6:	681b      	ldr	r3, [r3, #0]
 80001f8:	f442 3200 	orr.w	r2, r2, #131072	; 0x20000
 80001fc:	615a      	str	r2, [r3, #20]
	  }else if(pGPIOx == GPIOH)
	  {
	      GPIOH_PCLK_DI();
	  }
 }
}
 80001fe:	e0c1      	b.n	8000384 <GPIO_PCLKControl+0x1b0>
	 }else if(pGPIOx == GPIOB)
 8000200:	687b      	ldr	r3, [r7, #4]
 8000202:	4a64      	ldr	r2, [pc, #400]	; (8000394 <GPIO_PCLKControl+0x1c0>)
 8000204:	4293      	cmp	r3, r2
 8000206:	d108      	bne.n	800021a <GPIO_PCLKControl+0x46>
		GPIOB_PCLK_EN();
 8000208:	4b61      	ldr	r3, [pc, #388]	; (8000390 <GPIO_PCLKControl+0x1bc>)
 800020a:	681b      	ldr	r3, [r3, #0]
 800020c:	695a      	ldr	r2, [r3, #20]
 800020e:	4b60      	ldr	r3, [pc, #384]	; (8000390 <GPIO_PCLKControl+0x1bc>)
 8000210:	681b      	ldr	r3, [r3, #0]
 8000212:	f442 2280 	orr.w	r2, r2, #262144	; 0x40000
 8000216:	615a      	str	r2, [r3, #20]
}
 8000218:	e0b4      	b.n	8000384 <GPIO_PCLKControl+0x1b0>
	 }else if(pGPIOx == GPIOC)
 800021a:	687b      	ldr	r3, [r7, #4]
 800021c:	4a5e      	ldr	r2, [pc, #376]	; (8000398 <GPIO_PCLKControl+0x1c4>)
 800021e:	4293      	cmp	r3, r2
 8000220:	d108      	bne.n	8000234 <GPIO_PCLKControl+0x60>
		GPIOC_PCLK_EN();
 8000222:	4b5b      	ldr	r3, [pc, #364]	; (8000390 <GPIO_PCLKControl+0x1bc>)
 8000224:	681b      	ldr	r3, [r3, #0]
 8000226:	695a      	ldr	r2, [r3, #20]
 8000228:	4b59      	ldr	r3, [pc, #356]	; (8000390 <GPIO_PCLKControl+0x1bc>)
 800022a:	681b      	ldr	r3, [r3, #0]
 800022c:	f442 2200 	orr.w	r2, r2, #524288	; 0x80000
 8000230:	615a      	str	r2, [r3, #20]
}
 8000232:	e0a7      	b.n	8000384 <GPIO_PCLKControl+0x1b0>
	 } else if(pGPIOx == GPIOD)
 8000234:	687b      	ldr	r3, [r7, #4]
 8000236:	4a59      	ldr	r2, [pc, #356]	; (800039c <GPIO_PCLKControl+0x1c8>)
 8000238:	4293      	cmp	r3, r2
 800023a:	d108      	bne.n	800024e <GPIO_PCLKControl+0x7a>
		GPIOD_PCLK_EN();
 800023c:	4b54      	ldr	r3, [pc, #336]	; (8000390 <GPIO_PCLKControl+0x1bc>)
 800023e:	681b      	ldr	r3, [r3, #0]
 8000240:	695a      	ldr	r2, [r3, #20]
 8000242:	4b53      	ldr	r3, [pc, #332]	; (8000390 <GPIO_PCLKControl+0x1bc>)
 8000244:	681b      	ldr	r3, [r3, #0]
 8000246:	f442 1280 	orr.w	r2, r2, #1048576	; 0x100000
 800024a:	615a      	str	r2, [r3, #20]
}
 800024c:	e09a      	b.n	8000384 <GPIO_PCLKControl+0x1b0>
	 }else if(pGPIOx == GPIOE)
 800024e:	687b      	ldr	r3, [r7, #4]
 8000250:	4a53      	ldr	r2, [pc, #332]	; (80003a0 <GPIO_PCLKControl+0x1cc>)
 8000252:	4293      	cmp	r3, r2
 8000254:	d108      	bne.n	8000268 <GPIO_PCLKControl+0x94>
	    GPIOE_PCLK_EN();
 8000256:	4b4e      	ldr	r3, [pc, #312]	; (8000390 <GPIO_PCLKControl+0x1bc>)
 8000258:	681b      	ldr	r3, [r3, #0]
 800025a:	695a      	ldr	r2, [r3, #20]
 800025c:	4b4c      	ldr	r3, [pc, #304]	; (8000390 <GPIO_PCLKControl+0x1bc>)
 800025e:	681b      	ldr	r3, [r3, #0]
 8000260:	f442 1200 	orr.w	r2, r2, #2097152	; 0x200000
 8000264:	615a      	str	r2, [r3, #20]
}
 8000266:	e08d      	b.n	8000384 <GPIO_PCLKControl+0x1b0>
	  }else if(pGPIOx == GPIOF)
 8000268:	687b      	ldr	r3, [r7, #4]
 800026a:	4a4e      	ldr	r2, [pc, #312]	; (80003a4 <GPIO_PCLKControl+0x1d0>)
 800026c:	4293      	cmp	r3, r2
 800026e:	d108      	bne.n	8000282 <GPIO_PCLKControl+0xae>
		GPIOF_PCLK_EN();
 8000270:	4b47      	ldr	r3, [pc, #284]	; (8000390 <GPIO_PCLKControl+0x1bc>)
 8000272:	681b      	ldr	r3, [r3, #0]
 8000274:	695a      	ldr	r2, [r3, #20]
 8000276:	4b46      	ldr	r3, [pc, #280]	; (8000390 <GPIO_PCLKControl+0x1bc>)
 8000278:	681b      	ldr	r3, [r3, #0]
 800027a:	f442 0280 	orr.w	r2, r2, #4194304	; 0x400000
 800027e:	615a      	str	r2, [r3, #20]
}
 8000280:	e080      	b.n	8000384 <GPIO_PCLKControl+0x1b0>
	  }else if(pGPIOx == GPIOG)
 8000282:	687b      	ldr	r3, [r7, #4]
 8000284:	4a48      	ldr	r2, [pc, #288]	; (80003a8 <GPIO_PCLKControl+0x1d4>)
 8000286:	4293      	cmp	r3, r2
 8000288:	d108      	bne.n	800029c <GPIO_PCLKControl+0xc8>
	      GPIOG_PCLK_EN();
 800028a:	4b41      	ldr	r3, [pc, #260]	; (8000390 <GPIO_PCLKControl+0x1bc>)
 800028c:	681b      	ldr	r3, [r3, #0]
 800028e:	695a      	ldr	r2, [r3, #20]
 8000290:	4b3f      	ldr	r3, [pc, #252]	; (8000390 <GPIO_PCLKControl+0x1bc>)
 8000292:	681b      	ldr	r3, [r3, #0]
 8000294:	f442 0200 	orr.w	r2, r2, #8388608	; 0x800000
 8000298:	615a      	str	r2, [r3, #20]
}
 800029a:	e073      	b.n	8000384 <GPIO_PCLKControl+0x1b0>
	  }else if(pGPIOx == GPIOH)
 800029c:	687b      	ldr	r3, [r7, #4]
 800029e:	4a43      	ldr	r2, [pc, #268]	; (80003ac <GPIO_PCLKControl+0x1d8>)
 80002a0:	4293      	cmp	r3, r2
 80002a2:	d16f      	bne.n	8000384 <GPIO_PCLKControl+0x1b0>
	      GPIOH_PCLK_EN();
 80002a4:	4b3a      	ldr	r3, [pc, #232]	; (8000390 <GPIO_PCLKControl+0x1bc>)
 80002a6:	681b      	ldr	r3, [r3, #0]
 80002a8:	695a      	ldr	r2, [r3, #20]
 80002aa:	4b39      	ldr	r3, [pc, #228]	; (8000390 <GPIO_PCLKControl+0x1bc>)
 80002ac:	681b      	ldr	r3, [r3, #0]
 80002ae:	f442 3280 	orr.w	r2, r2, #65536	; 0x10000
 80002b2:	615a      	str	r2, [r3, #20]
}
 80002b4:	e066      	b.n	8000384 <GPIO_PCLKControl+0x1b0>
	 if(pGPIOx ==GPIOA)
 80002b6:	687b      	ldr	r3, [r7, #4]
 80002b8:	f1b3 4f90 	cmp.w	r3, #1207959552	; 0x48000000
 80002bc:	d108      	bne.n	80002d0 <GPIO_PCLKControl+0xfc>
		GPIOA_PCLK_DI();
 80002be:	4b34      	ldr	r3, [pc, #208]	; (8000390 <GPIO_PCLKControl+0x1bc>)
 80002c0:	681b      	ldr	r3, [r3, #0]
 80002c2:	695a      	ldr	r2, [r3, #20]
 80002c4:	4b32      	ldr	r3, [pc, #200]	; (8000390 <GPIO_PCLKControl+0x1bc>)
 80002c6:	681b      	ldr	r3, [r3, #0]
 80002c8:	f422 3200 	bic.w	r2, r2, #131072	; 0x20000
 80002cc:	615a      	str	r2, [r3, #20]
}
 80002ce:	e059      	b.n	8000384 <GPIO_PCLKControl+0x1b0>
	 }else if(pGPIOx == GPIOB)
 80002d0:	687b      	ldr	r3, [r7, #4]
 80002d2:	4a30      	ldr	r2, [pc, #192]	; (8000394 <GPIO_PCLKControl+0x1c0>)
 80002d4:	4293      	cmp	r3, r2
 80002d6:	d108      	bne.n	80002ea <GPIO_PCLKControl+0x116>
		GPIOB_PCLK_DI();
 80002d8:	4b2d      	ldr	r3, [pc, #180]	; (8000390 <GPIO_PCLKControl+0x1bc>)
 80002da:	681b      	ldr	r3, [r3, #0]
 80002dc:	695a      	ldr	r2, [r3, #20]
 80002de:	4b2c      	ldr	r3, [pc, #176]	; (8000390 <GPIO_PCLKControl+0x1bc>)
 80002e0:	681b      	ldr	r3, [r3, #0]
 80002e2:	f422 2280 	bic.w	r2, r2, #262144	; 0x40000
 80002e6:	615a      	str	r2, [r3, #20]
}
 80002e8:	e04c      	b.n	8000384 <GPIO_PCLKControl+0x1b0>
	 }else if(pGPIOx == GPIOC)
 80002ea:	687b      	ldr	r3, [r7, #4]
 80002ec:	4a2a      	ldr	r2, [pc, #168]	; (8000398 <GPIO_PCLKControl+0x1c4>)
 80002ee:	4293      	cmp	r3, r2
 80002f0:	d108      	bne.n	8000304 <GPIO_PCLKControl+0x130>
		GPIOC_PCLK_DI();
 80002f2:	4b27      	ldr	r3, [pc, #156]	; (8000390 <GPIO_PCLKControl+0x1bc>)
 80002f4:	681b      	ldr	r3, [r3, #0]
 80002f6:	695a      	ldr	r2, [r3, #20]
 80002f8:	4b25      	ldr	r3, [pc, #148]	; (8000390 <GPIO_PCLKControl+0x1bc>)
 80002fa:	681b      	ldr	r3, [r3, #0]
 80002fc:	f422 2200 	bic.w	r2, r2, #524288	; 0x80000
 8000300:	615a      	str	r2, [r3, #20]
}
 8000302:	e03f      	b.n	8000384 <GPIO_PCLKControl+0x1b0>
	 } else if(pGPIOx == GPIOD)
 8000304:	687b      	ldr	r3, [r7, #4]
 8000306:	4a25      	ldr	r2, [pc, #148]	; (800039c <GPIO_PCLKControl+0x1c8>)
 8000308:	4293      	cmp	r3, r2
 800030a:	d108      	bne.n	800031e <GPIO_PCLKControl+0x14a>
		GPIOD_PCLK_DI();
 800030c:	4b20      	ldr	r3, [pc, #128]	; (8000390 <GPIO_PCLKControl+0x1bc>)
 800030e:	681b      	ldr	r3, [r3, #0]
 8000310:	695a      	ldr	r2, [r3, #20]
 8000312:	4b1f      	ldr	r3, [pc, #124]	; (8000390 <GPIO_PCLKControl+0x1bc>)
 8000314:	681b      	ldr	r3, [r3, #0]
 8000316:	f422 1280 	bic.w	r2, r2, #1048576	; 0x100000
 800031a:	615a      	str	r2, [r3, #20]
}
 800031c:	e032      	b.n	8000384 <GPIO_PCLKControl+0x1b0>
	 }else if(pGPIOx == GPIOE)
 800031e:	687b      	ldr	r3, [r7, #4]
 8000320:	4a1f      	ldr	r2, [pc, #124]	; (80003a0 <GPIO_PCLKControl+0x1cc>)
 8000322:	4293      	cmp	r3, r2
 8000324:	d108      	bne.n	8000338 <GPIO_PCLKControl+0x164>
	    GPIOE_PCLK_DI();
 8000326:	4b1a      	ldr	r3, [pc, #104]	; (8000390 <GPIO_PCLKControl+0x1bc>)
 8000328:	681b      	ldr	r3, [r3, #0]
 800032a:	695a      	ldr	r2, [r3, #20]
 800032c:	4b18      	ldr	r3, [pc, #96]	; (8000390 <GPIO_PCLKControl+0x1bc>)
 800032e:	681b      	ldr	r3, [r3, #0]
 8000330:	f422 1200 	bic.w	r2, r2, #2097152	; 0x200000
 8000334:	615a      	str	r2, [r3, #20]
}
 8000336:	e025      	b.n	8000384 <GPIO_PCLKControl+0x1b0>
	  }else if(pGPIOx == GPIOF)
 8000338:	687b      	ldr	r3, [r7, #4]
 800033a:	4a1a      	ldr	r2, [pc, #104]	; (80003a4 <GPIO_PCLKControl+0x1d0>)
 800033c:	4293      	cmp	r3, r2
 800033e:	d108      	bne.n	8000352 <GPIO_PCLKControl+0x17e>
		GPIOF_PCLK_DI();
 8000340:	4b13      	ldr	r3, [pc, #76]	; (8000390 <GPIO_PCLKControl+0x1bc>)
 8000342:	681b      	ldr	r3, [r3, #0]
 8000344:	695a      	ldr	r2, [r3, #20]
 8000346:	4b12      	ldr	r3, [pc, #72]	; (8000390 <GPIO_PCLKControl+0x1bc>)
 8000348:	681b      	ldr	r3, [r3, #0]
 800034a:	f422 0280 	bic.w	r2, r2, #4194304	; 0x400000
 800034e:	615a      	str	r2, [r3, #20]
}
 8000350:	e018      	b.n	8000384 <GPIO_PCLKControl+0x1b0>
	  }else if(pGPIOx == GPIOG)
 8000352:	687b      	ldr	r3, [r7, #4]
 8000354:	4a14      	ldr	r2, [pc, #80]	; (80003a8 <GPIO_PCLKControl+0x1d4>)
 8000356:	4293      	cmp	r3, r2
 8000358:	d108      	bne.n	800036c <GPIO_PCLKControl+0x198>
	      GPIOG_PCLK_DI();
 800035a:	4b0d      	ldr	r3, [pc, #52]	; (8000390 <GPIO_PCLKControl+0x1bc>)
 800035c:	681b      	ldr	r3, [r3, #0]
 800035e:	695a      	ldr	r2, [r3, #20]
 8000360:	4b0b      	ldr	r3, [pc, #44]	; (8000390 <GPIO_PCLKControl+0x1bc>)
 8000362:	681b      	ldr	r3, [r3, #0]
 8000364:	f422 0200 	bic.w	r2, r2, #8388608	; 0x800000
 8000368:	615a      	str	r2, [r3, #20]
}
 800036a:	e00b      	b.n	8000384 <GPIO_PCLKControl+0x1b0>
	  }else if(pGPIOx == GPIOH)
 800036c:	687b      	ldr	r3, [r7, #4]
 800036e:	4a0f      	ldr	r2, [pc, #60]	; (80003ac <GPIO_PCLKControl+0x1d8>)
 8000370:	4293      	cmp	r3, r2
 8000372:	d107      	bne.n	8000384 <GPIO_PCLKControl+0x1b0>
	      GPIOH_PCLK_DI();
 8000374:	4b06      	ldr	r3, [pc, #24]	; (8000390 <GPIO_PCLKControl+0x1bc>)
 8000376:	681b      	ldr	r3, [r3, #0]
 8000378:	695a      	ldr	r2, [r3, #20]
 800037a:	4b05      	ldr	r3, [pc, #20]	; (8000390 <GPIO_PCLKControl+0x1bc>)
 800037c:	681b      	ldr	r3, [r3, #0]
 800037e:	f422 3280 	bic.w	r2, r2, #65536	; 0x10000
 8000382:	615a      	str	r2, [r3, #20]
}
 8000384:	bf00      	nop
 8000386:	370c      	adds	r7, #12
 8000388:	46bd      	mov	sp, r7
 800038a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800038e:	4770      	bx	lr
 8000390:	20000000 	.word	0x20000000
 8000394:	48000400 	.word	0x48000400
 8000398:	48000800 	.word	0x48000800
 800039c:	48000c00 	.word	0x48000c00
 80003a0:	48001000 	.word	0x48001000
 80003a4:	48001400 	.word	0x48001400
 80003a8:	48001800 	.word	0x48001800
 80003ac:	48001c00 	.word	0x48001c00

080003b0 <GPIO_Init>:
 *   Inputs		:  Pointer to GPIO handle.
 * Output/return:  None.
 * =====================================================================================
 */
void GPIO_Init(GPIO_Handle_t *pGPIOHandle)
{
 80003b0:	b480      	push	{r7}
 80003b2:	b087      	sub	sp, #28
 80003b4:	af00      	add	r7, sp, #0
 80003b6:	6078      	str	r0, [r7, #4]
	uint32_t temp=0;
 80003b8:	2300      	movs	r3, #0
 80003ba:	617b      	str	r3, [r7, #20]
//configure the mode

	if(pGPIOHandle->GPIO_Pin_Config.GPIO_PinMode <= GPIO_MODE_ANALOG)
 80003bc:	687b      	ldr	r3, [r7, #4]
 80003be:	795b      	ldrb	r3, [r3, #5]
 80003c0:	2b03      	cmp	r3, #3
 80003c2:	d822      	bhi.n	800040a <GPIO_Init+0x5a>
	{
		//non interrupt mode
		temp = (pGPIOHandle->GPIO_Pin_Config.GPIO_PinMode << (2 * pGPIOHandle->GPIO_Pin_Config.GPIO_PinNum));
 80003c4:	687b      	ldr	r3, [r7, #4]
 80003c6:	795b      	ldrb	r3, [r3, #5]
 80003c8:	461a      	mov	r2, r3
 80003ca:	687b      	ldr	r3, [r7, #4]
 80003cc:	791b      	ldrb	r3, [r3, #4]
 80003ce:	005b      	lsls	r3, r3, #1
 80003d0:	fa02 f303 	lsl.w	r3, r2, r3
 80003d4:	617b      	str	r3, [r7, #20]
		pGPIOHandle->pGPIOx->MODER &= ~ (0x3 << (2 * pGPIOHandle->GPIO_Pin_Config.GPIO_PinNum) );
 80003d6:	687b      	ldr	r3, [r7, #4]
 80003d8:	681b      	ldr	r3, [r3, #0]
 80003da:	681a      	ldr	r2, [r3, #0]
 80003dc:	687b      	ldr	r3, [r7, #4]
 80003de:	791b      	ldrb	r3, [r3, #4]
 80003e0:	005b      	lsls	r3, r3, #1
 80003e2:	2103      	movs	r1, #3
 80003e4:	fa01 f303 	lsl.w	r3, r1, r3
 80003e8:	43db      	mvns	r3, r3
 80003ea:	4619      	mov	r1, r3
 80003ec:	687b      	ldr	r3, [r7, #4]
 80003ee:	681b      	ldr	r3, [r3, #0]
 80003f0:	400a      	ands	r2, r1
 80003f2:	601a      	str	r2, [r3, #0]
		pGPIOHandle->pGPIOx->MODER |= temp;
 80003f4:	687b      	ldr	r3, [r7, #4]
 80003f6:	681b      	ldr	r3, [r3, #0]
 80003f8:	6819      	ldr	r1, [r3, #0]
 80003fa:	687b      	ldr	r3, [r7, #4]
 80003fc:	681b      	ldr	r3, [r3, #0]
 80003fe:	697a      	ldr	r2, [r7, #20]
 8000400:	430a      	orrs	r2, r1
 8000402:	601a      	str	r2, [r3, #0]
		temp=0;
 8000404:	2300      	movs	r3, #0
 8000406:	617b      	str	r3, [r7, #20]
 8000408:	e0d0      	b.n	80005ac <GPIO_Init+0x1fc>
	}
	else
	{
		//interrupt mode
		if(pGPIOHandle->GPIO_Pin_Config.GPIO_PinMode == GPIO_MODE_IT_FET)
 800040a:	687b      	ldr	r3, [r7, #4]
 800040c:	795b      	ldrb	r3, [r3, #5]
 800040e:	2b04      	cmp	r3, #4
 8000410:	d11b      	bne.n	800044a <GPIO_Init+0x9a>
		{
		//configure the falling edge of interrupt on extiregister. FTSR reg
			pEXTI->EXTI_FTSR1 |= (1 << pGPIOHandle->GPIO_Pin_Config.GPIO_PinNum);
 8000412:	4b4d      	ldr	r3, [pc, #308]	; (8000548 <GPIO_Init+0x198>)
 8000414:	681b      	ldr	r3, [r3, #0]
 8000416:	68da      	ldr	r2, [r3, #12]
 8000418:	687b      	ldr	r3, [r7, #4]
 800041a:	791b      	ldrb	r3, [r3, #4]
 800041c:	4619      	mov	r1, r3
 800041e:	2301      	movs	r3, #1
 8000420:	408b      	lsls	r3, r1
 8000422:	4619      	mov	r1, r3
 8000424:	4b48      	ldr	r3, [pc, #288]	; (8000548 <GPIO_Init+0x198>)
 8000426:	681b      	ldr	r3, [r3, #0]
 8000428:	430a      	orrs	r2, r1
 800042a:	60da      	str	r2, [r3, #12]
			//clear corresponding rtsr reg
			pEXTI->EXTI_RTSR1 &= ~(1 << pGPIOHandle->GPIO_Pin_Config.GPIO_PinNum);
 800042c:	4b46      	ldr	r3, [pc, #280]	; (8000548 <GPIO_Init+0x198>)
 800042e:	681b      	ldr	r3, [r3, #0]
 8000430:	689a      	ldr	r2, [r3, #8]
 8000432:	687b      	ldr	r3, [r7, #4]
 8000434:	791b      	ldrb	r3, [r3, #4]
 8000436:	4619      	mov	r1, r3
 8000438:	2301      	movs	r3, #1
 800043a:	408b      	lsls	r3, r1
 800043c:	43db      	mvns	r3, r3
 800043e:	4619      	mov	r1, r3
 8000440:	4b41      	ldr	r3, [pc, #260]	; (8000548 <GPIO_Init+0x198>)
 8000442:	681b      	ldr	r3, [r3, #0]
 8000444:	400a      	ands	r2, r1
 8000446:	609a      	str	r2, [r3, #8]
 8000448:	e03d      	b.n	80004c6 <GPIO_Init+0x116>

		}else if(pGPIOHandle->GPIO_Pin_Config.GPIO_PinMode == GPIO_MODE_IT_RET)
 800044a:	687b      	ldr	r3, [r7, #4]
 800044c:	795b      	ldrb	r3, [r3, #5]
 800044e:	2b05      	cmp	r3, #5
 8000450:	d11b      	bne.n	800048a <GPIO_Init+0xda>
		{
		//configure the falling edge of interrupt on exti reg. RTSR reg
			pEXTI->EXTI_RTSR1 |= (1 << pGPIOHandle->GPIO_Pin_Config.GPIO_PinNum);
 8000452:	4b3d      	ldr	r3, [pc, #244]	; (8000548 <GPIO_Init+0x198>)
 8000454:	681b      	ldr	r3, [r3, #0]
 8000456:	689a      	ldr	r2, [r3, #8]
 8000458:	687b      	ldr	r3, [r7, #4]
 800045a:	791b      	ldrb	r3, [r3, #4]
 800045c:	4619      	mov	r1, r3
 800045e:	2301      	movs	r3, #1
 8000460:	408b      	lsls	r3, r1
 8000462:	4619      	mov	r1, r3
 8000464:	4b38      	ldr	r3, [pc, #224]	; (8000548 <GPIO_Init+0x198>)
 8000466:	681b      	ldr	r3, [r3, #0]
 8000468:	430a      	orrs	r2, r1
 800046a:	609a      	str	r2, [r3, #8]
			//clear corresponding rtsr reg
			pEXTI->EXTI_FTSR1 &= ~(1 << pGPIOHandle->GPIO_Pin_Config.GPIO_PinNum);
 800046c:	4b36      	ldr	r3, [pc, #216]	; (8000548 <GPIO_Init+0x198>)
 800046e:	681b      	ldr	r3, [r3, #0]
 8000470:	68da      	ldr	r2, [r3, #12]
 8000472:	687b      	ldr	r3, [r7, #4]
 8000474:	791b      	ldrb	r3, [r3, #4]
 8000476:	4619      	mov	r1, r3
 8000478:	2301      	movs	r3, #1
 800047a:	408b      	lsls	r3, r1
 800047c:	43db      	mvns	r3, r3
 800047e:	4619      	mov	r1, r3
 8000480:	4b31      	ldr	r3, [pc, #196]	; (8000548 <GPIO_Init+0x198>)
 8000482:	681b      	ldr	r3, [r3, #0]
 8000484:	400a      	ands	r2, r1
 8000486:	60da      	str	r2, [r3, #12]
 8000488:	e01d      	b.n	80004c6 <GPIO_Init+0x116>

		}else if(pGPIOHandle->GPIO_Pin_Config.GPIO_PinMode == GPIO_MODE_IT_FRET)
 800048a:	687b      	ldr	r3, [r7, #4]
 800048c:	795b      	ldrb	r3, [r3, #5]
 800048e:	2b06      	cmp	r3, #6
 8000490:	d119      	bne.n	80004c6 <GPIO_Init+0x116>
		{
		//configure the falling edge of interrupt on exti register. FTSR and RTSR reg
			pEXTI->EXTI_RTSR1 |= (1 << pGPIOHandle->GPIO_Pin_Config.GPIO_PinNum);
 8000492:	4b2d      	ldr	r3, [pc, #180]	; (8000548 <GPIO_Init+0x198>)
 8000494:	681b      	ldr	r3, [r3, #0]
 8000496:	689a      	ldr	r2, [r3, #8]
 8000498:	687b      	ldr	r3, [r7, #4]
 800049a:	791b      	ldrb	r3, [r3, #4]
 800049c:	4619      	mov	r1, r3
 800049e:	2301      	movs	r3, #1
 80004a0:	408b      	lsls	r3, r1
 80004a2:	4619      	mov	r1, r3
 80004a4:	4b28      	ldr	r3, [pc, #160]	; (8000548 <GPIO_Init+0x198>)
 80004a6:	681b      	ldr	r3, [r3, #0]
 80004a8:	430a      	orrs	r2, r1
 80004aa:	609a      	str	r2, [r3, #8]
			pEXTI->EXTI_FTSR1 |= (1 << pGPIOHandle->GPIO_Pin_Config.GPIO_PinNum);
 80004ac:	4b26      	ldr	r3, [pc, #152]	; (8000548 <GPIO_Init+0x198>)
 80004ae:	681b      	ldr	r3, [r3, #0]
 80004b0:	68da      	ldr	r2, [r3, #12]
 80004b2:	687b      	ldr	r3, [r7, #4]
 80004b4:	791b      	ldrb	r3, [r3, #4]
 80004b6:	4619      	mov	r1, r3
 80004b8:	2301      	movs	r3, #1
 80004ba:	408b      	lsls	r3, r1
 80004bc:	4619      	mov	r1, r3
 80004be:	4b22      	ldr	r3, [pc, #136]	; (8000548 <GPIO_Init+0x198>)
 80004c0:	681b      	ldr	r3, [r3, #0]
 80004c2:	430a      	orrs	r2, r1
 80004c4:	60da      	str	r2, [r3, #12]
		}
		//Enable the port selection in sysconfig exticr: 4 exti regs. and each pin/exti is 4bit wide.

		uint8_t temp1 = (pGPIOHandle->GPIO_Pin_Config.GPIO_PinNum) / 4;
 80004c6:	687b      	ldr	r3, [r7, #4]
 80004c8:	791b      	ldrb	r3, [r3, #4]
 80004ca:	089b      	lsrs	r3, r3, #2
 80004cc:	74fb      	strb	r3, [r7, #19]
		uint8_t temp2 = (pGPIOHandle->GPIO_Pin_Config.GPIO_PinNum) % 4;
 80004ce:	687b      	ldr	r3, [r7, #4]
 80004d0:	791b      	ldrb	r3, [r3, #4]
 80004d2:	f003 0303 	and.w	r3, r3, #3
 80004d6:	74bb      	strb	r3, [r7, #18]
		uint8_t portCode = GET_PORT_CODE(pGPIOHandle->pGPIOx);
 80004d8:	687b      	ldr	r3, [r7, #4]
 80004da:	681b      	ldr	r3, [r3, #0]
 80004dc:	f1b3 4f90 	cmp.w	r3, #1207959552	; 0x48000000
 80004e0:	d042      	beq.n	8000568 <GPIO_Init+0x1b8>
 80004e2:	687b      	ldr	r3, [r7, #4]
 80004e4:	681b      	ldr	r3, [r3, #0]
 80004e6:	4a19      	ldr	r2, [pc, #100]	; (800054c <GPIO_Init+0x19c>)
 80004e8:	4293      	cmp	r3, r2
 80004ea:	d02b      	beq.n	8000544 <GPIO_Init+0x194>
 80004ec:	687b      	ldr	r3, [r7, #4]
 80004ee:	681b      	ldr	r3, [r3, #0]
 80004f0:	4a17      	ldr	r2, [pc, #92]	; (8000550 <GPIO_Init+0x1a0>)
 80004f2:	4293      	cmp	r3, r2
 80004f4:	d024      	beq.n	8000540 <GPIO_Init+0x190>
 80004f6:	687b      	ldr	r3, [r7, #4]
 80004f8:	681b      	ldr	r3, [r3, #0]
 80004fa:	4a16      	ldr	r2, [pc, #88]	; (8000554 <GPIO_Init+0x1a4>)
 80004fc:	4293      	cmp	r3, r2
 80004fe:	d01d      	beq.n	800053c <GPIO_Init+0x18c>
 8000500:	687b      	ldr	r3, [r7, #4]
 8000502:	681b      	ldr	r3, [r3, #0]
 8000504:	4a14      	ldr	r2, [pc, #80]	; (8000558 <GPIO_Init+0x1a8>)
 8000506:	4293      	cmp	r3, r2
 8000508:	d016      	beq.n	8000538 <GPIO_Init+0x188>
 800050a:	687b      	ldr	r3, [r7, #4]
 800050c:	681b      	ldr	r3, [r3, #0]
 800050e:	4a13      	ldr	r2, [pc, #76]	; (800055c <GPIO_Init+0x1ac>)
 8000510:	4293      	cmp	r3, r2
 8000512:	d00f      	beq.n	8000534 <GPIO_Init+0x184>
 8000514:	687b      	ldr	r3, [r7, #4]
 8000516:	681b      	ldr	r3, [r3, #0]
 8000518:	4a11      	ldr	r2, [pc, #68]	; (8000560 <GPIO_Init+0x1b0>)
 800051a:	4293      	cmp	r3, r2
 800051c:	d008      	beq.n	8000530 <GPIO_Init+0x180>
 800051e:	687b      	ldr	r3, [r7, #4]
 8000520:	681b      	ldr	r3, [r3, #0]
 8000522:	4a10      	ldr	r2, [pc, #64]	; (8000564 <GPIO_Init+0x1b4>)
 8000524:	4293      	cmp	r3, r2
 8000526:	d101      	bne.n	800052c <GPIO_Init+0x17c>
 8000528:	2307      	movs	r3, #7
 800052a:	e01e      	b.n	800056a <GPIO_Init+0x1ba>
 800052c:	2300      	movs	r3, #0
 800052e:	e01c      	b.n	800056a <GPIO_Init+0x1ba>
 8000530:	2306      	movs	r3, #6
 8000532:	e01a      	b.n	800056a <GPIO_Init+0x1ba>
 8000534:	2305      	movs	r3, #5
 8000536:	e018      	b.n	800056a <GPIO_Init+0x1ba>
 8000538:	2304      	movs	r3, #4
 800053a:	e016      	b.n	800056a <GPIO_Init+0x1ba>
 800053c:	2303      	movs	r3, #3
 800053e:	e014      	b.n	800056a <GPIO_Init+0x1ba>
 8000540:	2302      	movs	r3, #2
 8000542:	e012      	b.n	800056a <GPIO_Init+0x1ba>
 8000544:	2301      	movs	r3, #1
 8000546:	e010      	b.n	800056a <GPIO_Init+0x1ba>
 8000548:	20000004 	.word	0x20000004
 800054c:	48000400 	.word	0x48000400
 8000550:	48000800 	.word	0x48000800
 8000554:	48000c00 	.word	0x48000c00
 8000558:	48001000 	.word	0x48001000
 800055c:	48001400 	.word	0x48001400
 8000560:	48001800 	.word	0x48001800
 8000564:	48001c00 	.word	0x48001c00
 8000568:	2300      	movs	r3, #0
 800056a:	747b      	strb	r3, [r7, #17]
		pSYSCFG->SYSCFG_EXTICR[temp1] |= (portCode << (4 * temp2));
 800056c:	4b60      	ldr	r3, [pc, #384]	; (80006f0 <GPIO_Init+0x340>)
 800056e:	681b      	ldr	r3, [r3, #0]
 8000570:	7cfa      	ldrb	r2, [r7, #19]
 8000572:	3202      	adds	r2, #2
 8000574:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 8000578:	7c7a      	ldrb	r2, [r7, #17]
 800057a:	7cbb      	ldrb	r3, [r7, #18]
 800057c:	009b      	lsls	r3, r3, #2
 800057e:	fa02 f303 	lsl.w	r3, r2, r3
 8000582:	4618      	mov	r0, r3
 8000584:	4b5a      	ldr	r3, [pc, #360]	; (80006f0 <GPIO_Init+0x340>)
 8000586:	681b      	ldr	r3, [r3, #0]
 8000588:	7cfa      	ldrb	r2, [r7, #19]
 800058a:	4301      	orrs	r1, r0
 800058c:	3202      	adds	r2, #2
 800058e:	f843 1022 	str.w	r1, [r3, r2, lsl #2]

		//Enable the interrupt delivery to the processor by setting exti IMR register.
		pEXTI->EXTI_IMR1 |= (1 << pGPIOHandle->GPIO_Pin_Config.GPIO_PinNum);
 8000592:	4b58      	ldr	r3, [pc, #352]	; (80006f4 <GPIO_Init+0x344>)
 8000594:	681b      	ldr	r3, [r3, #0]
 8000596:	681a      	ldr	r2, [r3, #0]
 8000598:	687b      	ldr	r3, [r7, #4]
 800059a:	791b      	ldrb	r3, [r3, #4]
 800059c:	4619      	mov	r1, r3
 800059e:	2301      	movs	r3, #1
 80005a0:	408b      	lsls	r3, r1
 80005a2:	4619      	mov	r1, r3
 80005a4:	4b53      	ldr	r3, [pc, #332]	; (80006f4 <GPIO_Init+0x344>)
 80005a6:	681b      	ldr	r3, [r3, #0]
 80005a8:	430a      	orrs	r2, r1
 80005aa:	601a      	str	r2, [r3, #0]
	}
	temp = 0;
 80005ac:	2300      	movs	r3, #0
 80005ae:	617b      	str	r3, [r7, #20]
//configure the speed
	temp = (pGPIOHandle->GPIO_Pin_Config.GPIO_PinSpeed << (2 * pGPIOHandle->GPIO_Pin_Config.GPIO_PinNum));
 80005b0:	687b      	ldr	r3, [r7, #4]
 80005b2:	799b      	ldrb	r3, [r3, #6]
 80005b4:	461a      	mov	r2, r3
 80005b6:	687b      	ldr	r3, [r7, #4]
 80005b8:	791b      	ldrb	r3, [r3, #4]
 80005ba:	005b      	lsls	r3, r3, #1
 80005bc:	fa02 f303 	lsl.w	r3, r2, r3
 80005c0:	617b      	str	r3, [r7, #20]
	pGPIOHandle->pGPIOx->OSPEEDR &= ~ (0x3 << (2 * pGPIOHandle->GPIO_Pin_Config.GPIO_PinNum) );
 80005c2:	687b      	ldr	r3, [r7, #4]
 80005c4:	681b      	ldr	r3, [r3, #0]
 80005c6:	689a      	ldr	r2, [r3, #8]
 80005c8:	687b      	ldr	r3, [r7, #4]
 80005ca:	791b      	ldrb	r3, [r3, #4]
 80005cc:	005b      	lsls	r3, r3, #1
 80005ce:	2103      	movs	r1, #3
 80005d0:	fa01 f303 	lsl.w	r3, r1, r3
 80005d4:	43db      	mvns	r3, r3
 80005d6:	4619      	mov	r1, r3
 80005d8:	687b      	ldr	r3, [r7, #4]
 80005da:	681b      	ldr	r3, [r3, #0]
 80005dc:	400a      	ands	r2, r1
 80005de:	609a      	str	r2, [r3, #8]
	pGPIOHandle->pGPIOx->OSPEEDR |= temp; //setting
 80005e0:	687b      	ldr	r3, [r7, #4]
 80005e2:	681b      	ldr	r3, [r3, #0]
 80005e4:	6899      	ldr	r1, [r3, #8]
 80005e6:	687b      	ldr	r3, [r7, #4]
 80005e8:	681b      	ldr	r3, [r3, #0]
 80005ea:	697a      	ldr	r2, [r7, #20]
 80005ec:	430a      	orrs	r2, r1
 80005ee:	609a      	str	r2, [r3, #8]
	temp=0;
 80005f0:	2300      	movs	r3, #0
 80005f2:	617b      	str	r3, [r7, #20]
//configure the pupd settings
	temp = (pGPIOHandle->GPIO_Pin_Config.GPIO_PinPuPdCntrl << (2 * pGPIOHandle->GPIO_Pin_Config.GPIO_PinNum));
 80005f4:	687b      	ldr	r3, [r7, #4]
 80005f6:	7a1b      	ldrb	r3, [r3, #8]
 80005f8:	461a      	mov	r2, r3
 80005fa:	687b      	ldr	r3, [r7, #4]
 80005fc:	791b      	ldrb	r3, [r3, #4]
 80005fe:	005b      	lsls	r3, r3, #1
 8000600:	fa02 f303 	lsl.w	r3, r2, r3
 8000604:	617b      	str	r3, [r7, #20]
	pGPIOHandle->pGPIOx->PUPDR &= ~ (0x3 << (2 * pGPIOHandle->GPIO_Pin_Config.GPIO_PinNum) );
 8000606:	687b      	ldr	r3, [r7, #4]
 8000608:	681b      	ldr	r3, [r3, #0]
 800060a:	68da      	ldr	r2, [r3, #12]
 800060c:	687b      	ldr	r3, [r7, #4]
 800060e:	791b      	ldrb	r3, [r3, #4]
 8000610:	005b      	lsls	r3, r3, #1
 8000612:	2103      	movs	r1, #3
 8000614:	fa01 f303 	lsl.w	r3, r1, r3
 8000618:	43db      	mvns	r3, r3
 800061a:	4619      	mov	r1, r3
 800061c:	687b      	ldr	r3, [r7, #4]
 800061e:	681b      	ldr	r3, [r3, #0]
 8000620:	400a      	ands	r2, r1
 8000622:	60da      	str	r2, [r3, #12]
	pGPIOHandle->pGPIOx->PUPDR |= temp;
 8000624:	687b      	ldr	r3, [r7, #4]
 8000626:	681b      	ldr	r3, [r3, #0]
 8000628:	68d9      	ldr	r1, [r3, #12]
 800062a:	687b      	ldr	r3, [r7, #4]
 800062c:	681b      	ldr	r3, [r3, #0]
 800062e:	697a      	ldr	r2, [r7, #20]
 8000630:	430a      	orrs	r2, r1
 8000632:	60da      	str	r2, [r3, #12]
	temp =0;
 8000634:	2300      	movs	r3, #0
 8000636:	617b      	str	r3, [r7, #20]
//configure output type
	temp = (pGPIOHandle->GPIO_Pin_Config.GPIO_PinOType << (pGPIOHandle->GPIO_Pin_Config.GPIO_PinNum));
 8000638:	687b      	ldr	r3, [r7, #4]
 800063a:	79db      	ldrb	r3, [r3, #7]
 800063c:	461a      	mov	r2, r3
 800063e:	687b      	ldr	r3, [r7, #4]
 8000640:	791b      	ldrb	r3, [r3, #4]
 8000642:	fa02 f303 	lsl.w	r3, r2, r3
 8000646:	617b      	str	r3, [r7, #20]
	pGPIOHandle->pGPIOx->OTYPER &= ~ (0x1 << pGPIOHandle->GPIO_Pin_Config.GPIO_PinNum );
 8000648:	687b      	ldr	r3, [r7, #4]
 800064a:	681b      	ldr	r3, [r3, #0]
 800064c:	685a      	ldr	r2, [r3, #4]
 800064e:	687b      	ldr	r3, [r7, #4]
 8000650:	791b      	ldrb	r3, [r3, #4]
 8000652:	4619      	mov	r1, r3
 8000654:	2301      	movs	r3, #1
 8000656:	408b      	lsls	r3, r1
 8000658:	43db      	mvns	r3, r3
 800065a:	4619      	mov	r1, r3
 800065c:	687b      	ldr	r3, [r7, #4]
 800065e:	681b      	ldr	r3, [r3, #0]
 8000660:	400a      	ands	r2, r1
 8000662:	605a      	str	r2, [r3, #4]
	pGPIOHandle->pGPIOx->OTYPER |= temp;
 8000664:	687b      	ldr	r3, [r7, #4]
 8000666:	681b      	ldr	r3, [r3, #0]
 8000668:	6859      	ldr	r1, [r3, #4]
 800066a:	687b      	ldr	r3, [r7, #4]
 800066c:	681b      	ldr	r3, [r3, #0]
 800066e:	697a      	ldr	r2, [r7, #20]
 8000670:	430a      	orrs	r2, r1
 8000672:	605a      	str	r2, [r3, #4]
	temp=0;
 8000674:	2300      	movs	r3, #0
 8000676:	617b      	str	r3, [r7, #20]
//configure the alternate functionalities
	if(pGPIOHandle->GPIO_Pin_Config.GPIO_PinMode == GPIO_MODE_AF)
 8000678:	687b      	ldr	r3, [r7, #4]
 800067a:	795b      	ldrb	r3, [r3, #5]
 800067c:	2b02      	cmp	r3, #2
 800067e:	d131      	bne.n	80006e4 <GPIO_Init+0x334>
	{
		uint8_t temp1, temp2;
		temp1= (pGPIOHandle->GPIO_Pin_Config.GPIO_PinNum)/8;
 8000680:	687b      	ldr	r3, [r7, #4]
 8000682:	791b      	ldrb	r3, [r3, #4]
 8000684:	08db      	lsrs	r3, r3, #3
 8000686:	743b      	strb	r3, [r7, #16]
		temp2= (pGPIOHandle->GPIO_Pin_Config.GPIO_PinNum)%8;
 8000688:	687b      	ldr	r3, [r7, #4]
 800068a:	791b      	ldrb	r3, [r3, #4]
 800068c:	f003 0307 	and.w	r3, r3, #7
 8000690:	73fb      	strb	r3, [r7, #15]
		pGPIOHandle->pGPIOx->AFR[temp1] &= ~( 0xF << (temp2 * 4 ));
 8000692:	687b      	ldr	r3, [r7, #4]
 8000694:	681b      	ldr	r3, [r3, #0]
 8000696:	7c3a      	ldrb	r2, [r7, #16]
 8000698:	3208      	adds	r2, #8
 800069a:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 800069e:	7bfb      	ldrb	r3, [r7, #15]
 80006a0:	009b      	lsls	r3, r3, #2
 80006a2:	220f      	movs	r2, #15
 80006a4:	fa02 f303 	lsl.w	r3, r2, r3
 80006a8:	43db      	mvns	r3, r3
 80006aa:	4618      	mov	r0, r3
 80006ac:	687b      	ldr	r3, [r7, #4]
 80006ae:	681b      	ldr	r3, [r3, #0]
 80006b0:	7c3a      	ldrb	r2, [r7, #16]
 80006b2:	4001      	ands	r1, r0
 80006b4:	3208      	adds	r2, #8
 80006b6:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
		pGPIOHandle->pGPIOx->AFR[temp1] |= ( pGPIOHandle->GPIO_Pin_Config.GPIO_PinAFmode << (temp2 * 4 ));
 80006ba:	687b      	ldr	r3, [r7, #4]
 80006bc:	681b      	ldr	r3, [r3, #0]
 80006be:	7c3a      	ldrb	r2, [r7, #16]
 80006c0:	3208      	adds	r2, #8
 80006c2:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 80006c6:	687b      	ldr	r3, [r7, #4]
 80006c8:	7a5b      	ldrb	r3, [r3, #9]
 80006ca:	461a      	mov	r2, r3
 80006cc:	7bfb      	ldrb	r3, [r7, #15]
 80006ce:	009b      	lsls	r3, r3, #2
 80006d0:	fa02 f303 	lsl.w	r3, r2, r3
 80006d4:	4618      	mov	r0, r3
 80006d6:	687b      	ldr	r3, [r7, #4]
 80006d8:	681b      	ldr	r3, [r3, #0]
 80006da:	7c3a      	ldrb	r2, [r7, #16]
 80006dc:	4301      	orrs	r1, r0
 80006de:	3208      	adds	r2, #8
 80006e0:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
	}


}
 80006e4:	bf00      	nop
 80006e6:	371c      	adds	r7, #28
 80006e8:	46bd      	mov	sp, r7
 80006ea:	f85d 7b04 	ldr.w	r7, [sp], #4
 80006ee:	4770      	bx	lr
 80006f0:	20000008 	.word	0x20000008
 80006f4:	20000004 	.word	0x20000004

080006f8 <GPIO_ToggleOutPin>:
 *   Inputs		:  Pointer to GPIO port base address and pin number.
 * Output/return:  None.
 * =====================================================================================
 */
void GPIO_ToggleOutPin(GPIO_Reg_Def_t *pGPIOx, uint8_t pinNum)
{
 80006f8:	b480      	push	{r7}
 80006fa:	b083      	sub	sp, #12
 80006fc:	af00      	add	r7, sp, #0
 80006fe:	6078      	str	r0, [r7, #4]
 8000700:	460b      	mov	r3, r1
 8000702:	70fb      	strb	r3, [r7, #3]
	(pGPIOx->ODR) ^= (1 << pinNum);
 8000704:	687b      	ldr	r3, [r7, #4]
 8000706:	695b      	ldr	r3, [r3, #20]
 8000708:	78fa      	ldrb	r2, [r7, #3]
 800070a:	2101      	movs	r1, #1
 800070c:	fa01 f202 	lsl.w	r2, r1, r2
 8000710:	405a      	eors	r2, r3
 8000712:	687b      	ldr	r3, [r7, #4]
 8000714:	615a      	str	r2, [r3, #20]
}
 8000716:	bf00      	nop
 8000718:	370c      	adds	r7, #12
 800071a:	46bd      	mov	sp, r7
 800071c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000720:	4770      	bx	lr
	...

08000724 <GPIO_IRQConfig>:
 *   Inputs		:  IRQ number, priority and Enable/disable
 * Output/return:  None.
 * =====================================================================================
 */
void GPIO_IRQConfig(uint8_t IRQNum, uint8_t ENorDI)
{
 8000724:	b480      	push	{r7}
 8000726:	b083      	sub	sp, #12
 8000728:	af00      	add	r7, sp, #0
 800072a:	4603      	mov	r3, r0
 800072c:	460a      	mov	r2, r1
 800072e:	71fb      	strb	r3, [r7, #7]
 8000730:	4613      	mov	r3, r2
 8000732:	71bb      	strb	r3, [r7, #6]

	if( ENorDI == ENABLE)
 8000734:	79bb      	ldrb	r3, [r7, #6]
 8000736:	2b01      	cmp	r3, #1
 8000738:	d133      	bne.n	80007a2 <GPIO_IRQConfig+0x7e>
	{
		if(IRQNum <= 31)
 800073a:	79fb      	ldrb	r3, [r7, #7]
 800073c:	2b1f      	cmp	r3, #31
 800073e:	d80a      	bhi.n	8000756 <GPIO_IRQConfig+0x32>
		{
			*NVIC_ISER0 |= (1 << IRQNum);
 8000740:	4b35      	ldr	r3, [pc, #212]	; (8000818 <GPIO_IRQConfig+0xf4>)
 8000742:	681b      	ldr	r3, [r3, #0]
 8000744:	79fa      	ldrb	r2, [r7, #7]
 8000746:	2101      	movs	r1, #1
 8000748:	fa01 f202 	lsl.w	r2, r1, r2
 800074c:	4611      	mov	r1, r2
 800074e:	4a32      	ldr	r2, [pc, #200]	; (8000818 <GPIO_IRQConfig+0xf4>)
 8000750:	430b      	orrs	r3, r1
 8000752:	6013      	str	r3, [r2, #0]
		}else if (IRQNum >63 && IRQNum < 96)
		{
			*NVIC_ICER2 |= (1 << (IRQNum % 64));
		}
	}
}
 8000754:	e059      	b.n	800080a <GPIO_IRQConfig+0xe6>
		}else if(IRQNum >31 && IRQNum < 64)
 8000756:	79fb      	ldrb	r3, [r7, #7]
 8000758:	2b1f      	cmp	r3, #31
 800075a:	d90f      	bls.n	800077c <GPIO_IRQConfig+0x58>
 800075c:	79fb      	ldrb	r3, [r7, #7]
 800075e:	2b3f      	cmp	r3, #63	; 0x3f
 8000760:	d80c      	bhi.n	800077c <GPIO_IRQConfig+0x58>
			*NVIC_ISER1 |= (1 << (IRQNum % 32));
 8000762:	4b2e      	ldr	r3, [pc, #184]	; (800081c <GPIO_IRQConfig+0xf8>)
 8000764:	681b      	ldr	r3, [r3, #0]
 8000766:	79fa      	ldrb	r2, [r7, #7]
 8000768:	f002 021f 	and.w	r2, r2, #31
 800076c:	2101      	movs	r1, #1
 800076e:	fa01 f202 	lsl.w	r2, r1, r2
 8000772:	4611      	mov	r1, r2
 8000774:	4a29      	ldr	r2, [pc, #164]	; (800081c <GPIO_IRQConfig+0xf8>)
 8000776:	430b      	orrs	r3, r1
 8000778:	6013      	str	r3, [r2, #0]
 800077a:	e046      	b.n	800080a <GPIO_IRQConfig+0xe6>
		}else if (IRQNum >63 && IRQNum < 96)
 800077c:	79fb      	ldrb	r3, [r7, #7]
 800077e:	2b3f      	cmp	r3, #63	; 0x3f
 8000780:	d943      	bls.n	800080a <GPIO_IRQConfig+0xe6>
 8000782:	79fb      	ldrb	r3, [r7, #7]
 8000784:	2b5f      	cmp	r3, #95	; 0x5f
 8000786:	d840      	bhi.n	800080a <GPIO_IRQConfig+0xe6>
			*NVIC_ISER2 |= (1 << (IRQNum % 64));
 8000788:	4b25      	ldr	r3, [pc, #148]	; (8000820 <GPIO_IRQConfig+0xfc>)
 800078a:	681b      	ldr	r3, [r3, #0]
 800078c:	79fa      	ldrb	r2, [r7, #7]
 800078e:	f002 023f 	and.w	r2, r2, #63	; 0x3f
 8000792:	2101      	movs	r1, #1
 8000794:	fa01 f202 	lsl.w	r2, r1, r2
 8000798:	4611      	mov	r1, r2
 800079a:	4a21      	ldr	r2, [pc, #132]	; (8000820 <GPIO_IRQConfig+0xfc>)
 800079c:	430b      	orrs	r3, r1
 800079e:	6013      	str	r3, [r2, #0]
}
 80007a0:	e033      	b.n	800080a <GPIO_IRQConfig+0xe6>
		if(IRQNum <= 31)
 80007a2:	79fb      	ldrb	r3, [r7, #7]
 80007a4:	2b1f      	cmp	r3, #31
 80007a6:	d80a      	bhi.n	80007be <GPIO_IRQConfig+0x9a>
			*NVIC_ICER0 |= (1 << IRQNum);
 80007a8:	4b1e      	ldr	r3, [pc, #120]	; (8000824 <GPIO_IRQConfig+0x100>)
 80007aa:	681b      	ldr	r3, [r3, #0]
 80007ac:	79fa      	ldrb	r2, [r7, #7]
 80007ae:	2101      	movs	r1, #1
 80007b0:	fa01 f202 	lsl.w	r2, r1, r2
 80007b4:	4611      	mov	r1, r2
 80007b6:	4a1b      	ldr	r2, [pc, #108]	; (8000824 <GPIO_IRQConfig+0x100>)
 80007b8:	430b      	orrs	r3, r1
 80007ba:	6013      	str	r3, [r2, #0]
}
 80007bc:	e025      	b.n	800080a <GPIO_IRQConfig+0xe6>
		}else if(IRQNum >31 && IRQNum < 64)
 80007be:	79fb      	ldrb	r3, [r7, #7]
 80007c0:	2b1f      	cmp	r3, #31
 80007c2:	d90f      	bls.n	80007e4 <GPIO_IRQConfig+0xc0>
 80007c4:	79fb      	ldrb	r3, [r7, #7]
 80007c6:	2b3f      	cmp	r3, #63	; 0x3f
 80007c8:	d80c      	bhi.n	80007e4 <GPIO_IRQConfig+0xc0>
			*NVIC_ICER1 |= (1 << (IRQNum % 32));
 80007ca:	4b17      	ldr	r3, [pc, #92]	; (8000828 <GPIO_IRQConfig+0x104>)
 80007cc:	681b      	ldr	r3, [r3, #0]
 80007ce:	79fa      	ldrb	r2, [r7, #7]
 80007d0:	f002 021f 	and.w	r2, r2, #31
 80007d4:	2101      	movs	r1, #1
 80007d6:	fa01 f202 	lsl.w	r2, r1, r2
 80007da:	4611      	mov	r1, r2
 80007dc:	4a12      	ldr	r2, [pc, #72]	; (8000828 <GPIO_IRQConfig+0x104>)
 80007de:	430b      	orrs	r3, r1
 80007e0:	6013      	str	r3, [r2, #0]
 80007e2:	e012      	b.n	800080a <GPIO_IRQConfig+0xe6>
		}else if (IRQNum >63 && IRQNum < 96)
 80007e4:	79fb      	ldrb	r3, [r7, #7]
 80007e6:	2b3f      	cmp	r3, #63	; 0x3f
 80007e8:	d90f      	bls.n	800080a <GPIO_IRQConfig+0xe6>
 80007ea:	79fb      	ldrb	r3, [r7, #7]
 80007ec:	2b5f      	cmp	r3, #95	; 0x5f
 80007ee:	d80c      	bhi.n	800080a <GPIO_IRQConfig+0xe6>
			*NVIC_ICER2 |= (1 << (IRQNum % 64));
 80007f0:	4b0e      	ldr	r3, [pc, #56]	; (800082c <GPIO_IRQConfig+0x108>)
 80007f2:	681b      	ldr	r3, [r3, #0]
 80007f4:	79fa      	ldrb	r2, [r7, #7]
 80007f6:	f002 023f 	and.w	r2, r2, #63	; 0x3f
 80007fa:	2101      	movs	r1, #1
 80007fc:	fa01 f202 	lsl.w	r2, r1, r2
 8000800:	4611      	mov	r1, r2
 8000802:	4a0a      	ldr	r2, [pc, #40]	; (800082c <GPIO_IRQConfig+0x108>)
 8000804:	430b      	orrs	r3, r1
 8000806:	6013      	str	r3, [r2, #0]
}
 8000808:	e7ff      	b.n	800080a <GPIO_IRQConfig+0xe6>
 800080a:	bf00      	nop
 800080c:	370c      	adds	r7, #12
 800080e:	46bd      	mov	sp, r7
 8000810:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000814:	4770      	bx	lr
 8000816:	bf00      	nop
 8000818:	e000e100 	.word	0xe000e100
 800081c:	e000e104 	.word	0xe000e104
 8000820:	e000e108 	.word	0xe000e108
 8000824:	e000e180 	.word	0xe000e180
 8000828:	e000e184 	.word	0xe000e184
 800082c:	e000e188 	.word	0xe000e188

08000830 <GPIO_IRQ_PriorityConfig>:
 *   Inputs		:  Pin number at which interrupt triggers.
 * Output/return:  None.
 * =====================================================================================
 */
void GPIO_IRQ_PriorityConfig(uint8_t IRQNum, uint8_t IRQPriority)
{
 8000830:	b480      	push	{r7}
 8000832:	b085      	sub	sp, #20
 8000834:	af00      	add	r7, sp, #0
 8000836:	4603      	mov	r3, r0
 8000838:	460a      	mov	r2, r1
 800083a:	71fb      	strb	r3, [r7, #7]
 800083c:	4613      	mov	r3, r2
 800083e:	71bb      	strb	r3, [r7, #6]
	uint8_t ipr = IRQNum / 4;
 8000840:	79fb      	ldrb	r3, [r7, #7]
 8000842:	089b      	lsrs	r3, r3, #2
 8000844:	73fb      	strb	r3, [r7, #15]
	uint8_t ipr_sec = IRQNum % 4;
 8000846:	79fb      	ldrb	r3, [r7, #7]
 8000848:	f003 0303 	and.w	r3, r3, #3
 800084c:	73bb      	strb	r3, [r7, #14]
	uint8_t shift = (8 * ipr_sec) + (8 - NO_PR_BIT_IMPLEMENTED);
 800084e:	7bbb      	ldrb	r3, [r7, #14]
 8000850:	00db      	lsls	r3, r3, #3
 8000852:	b2db      	uxtb	r3, r3
 8000854:	3304      	adds	r3, #4
 8000856:	737b      	strb	r3, [r7, #13]
	*(NVIC_IPR_BASE_ADDR + (4 * ipr)) |= (IRQPriority << shift);
 8000858:	7bfb      	ldrb	r3, [r7, #15]
 800085a:	011b      	lsls	r3, r3, #4
 800085c:	f103 4360 	add.w	r3, r3, #3758096384	; 0xe0000000
 8000860:	f503 4364 	add.w	r3, r3, #58368	; 0xe400
 8000864:	681a      	ldr	r2, [r3, #0]
 8000866:	79b9      	ldrb	r1, [r7, #6]
 8000868:	7b7b      	ldrb	r3, [r7, #13]
 800086a:	fa01 f303 	lsl.w	r3, r1, r3
 800086e:	4619      	mov	r1, r3
 8000870:	7bfb      	ldrb	r3, [r7, #15]
 8000872:	011b      	lsls	r3, r3, #4
 8000874:	f103 4360 	add.w	r3, r3, #3758096384	; 0xe0000000
 8000878:	f503 4364 	add.w	r3, r3, #58368	; 0xe400
 800087c:	430a      	orrs	r2, r1
 800087e:	601a      	str	r2, [r3, #0]
}
 8000880:	bf00      	nop
 8000882:	3714      	adds	r7, #20
 8000884:	46bd      	mov	sp, r7
 8000886:	f85d 7b04 	ldr.w	r7, [sp], #4
 800088a:	4770      	bx	lr

0800088c <GPIO_IRQHandler>:
 *   Inputs		:  Pin number at which interrupt triggers.
 * Output/return:  None.
 * =====================================================================================
 */
void GPIO_IRQHandler(uint8_t PinNum)
{
 800088c:	b480      	push	{r7}
 800088e:	b083      	sub	sp, #12
 8000890:	af00      	add	r7, sp, #0
 8000892:	4603      	mov	r3, r0
 8000894:	71fb      	strb	r3, [r7, #7]

	//clear the exti pr regtister.
	if(pEXTI->EXTI_PR1 & (1 << PinNum))
 8000896:	4b0e      	ldr	r3, [pc, #56]	; (80008d0 <GPIO_IRQHandler+0x44>)
 8000898:	681b      	ldr	r3, [r3, #0]
 800089a:	695b      	ldr	r3, [r3, #20]
 800089c:	79fa      	ldrb	r2, [r7, #7]
 800089e:	2101      	movs	r1, #1
 80008a0:	fa01 f202 	lsl.w	r2, r1, r2
 80008a4:	4013      	ands	r3, r2
 80008a6:	2b00      	cmp	r3, #0
 80008a8:	d00b      	beq.n	80008c2 <GPIO_IRQHandler+0x36>
	{
		//clear the pin by setting the corresponding bit for the pin.
		pEXTI->EXTI_PR1 |= (1 << PinNum);
 80008aa:	4b09      	ldr	r3, [pc, #36]	; (80008d0 <GPIO_IRQHandler+0x44>)
 80008ac:	681b      	ldr	r3, [r3, #0]
 80008ae:	695a      	ldr	r2, [r3, #20]
 80008b0:	79fb      	ldrb	r3, [r7, #7]
 80008b2:	2101      	movs	r1, #1
 80008b4:	fa01 f303 	lsl.w	r3, r1, r3
 80008b8:	4619      	mov	r1, r3
 80008ba:	4b05      	ldr	r3, [pc, #20]	; (80008d0 <GPIO_IRQHandler+0x44>)
 80008bc:	681b      	ldr	r3, [r3, #0]
 80008be:	430a      	orrs	r2, r1
 80008c0:	615a      	str	r2, [r3, #20]
	}
}
 80008c2:	bf00      	nop
 80008c4:	370c      	adds	r7, #12
 80008c6:	46bd      	mov	sp, r7
 80008c8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80008cc:	4770      	bx	lr
 80008ce:	bf00      	nop
 80008d0:	20000004 	.word	0x20000004

080008d4 <delay>:
#define HIGH 1
#define LOW  0
#define BUTTON_PRESSED LOW

void delay()
{
 80008d4:	b480      	push	{r7}
 80008d6:	b083      	sub	sp, #12
 80008d8:	af00      	add	r7, sp, #0
	for (int i=0; i<500000/2; i++)
 80008da:	2300      	movs	r3, #0
 80008dc:	607b      	str	r3, [r7, #4]
 80008de:	e002      	b.n	80008e6 <delay+0x12>
 80008e0:	687b      	ldr	r3, [r7, #4]
 80008e2:	3301      	adds	r3, #1
 80008e4:	607b      	str	r3, [r7, #4]
 80008e6:	687b      	ldr	r3, [r7, #4]
 80008e8:	4a04      	ldr	r2, [pc, #16]	; (80008fc <delay+0x28>)
 80008ea:	4293      	cmp	r3, r2
 80008ec:	ddf8      	ble.n	80008e0 <delay+0xc>
	{

	}
}
 80008ee:	bf00      	nop
 80008f0:	bf00      	nop
 80008f2:	370c      	adds	r7, #12
 80008f4:	46bd      	mov	sp, r7
 80008f6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80008fa:	4770      	bx	lr
 80008fc:	0003d08f 	.word	0x0003d08f

08000900 <main>:
int main(void)
{
 8000900:	b580      	push	{r7, lr}
 8000902:	b086      	sub	sp, #24
 8000904:	af00      	add	r7, sp, #0
	GPIO_Handle_t GpioLed, GpioButton;   	//handle for led
	memset(&GpioLed, 0, sizeof(GpioLed));
 8000906:	f107 030c 	add.w	r3, r7, #12
 800090a:	220c      	movs	r2, #12
 800090c:	2100      	movs	r1, #0
 800090e:	4618      	mov	r0, r3
 8000910:	f000 f896 	bl	8000a40 <memset>
	memset(&GpioButton, 0, sizeof(GpioButton));
 8000914:	463b      	mov	r3, r7
 8000916:	220c      	movs	r2, #12
 8000918:	2100      	movs	r1, #0
 800091a:	4618      	mov	r0, r3
 800091c:	f000 f890 	bl	8000a40 <memset>
	//led handle init
	GpioLed.pGPIOx = GPIOA;
 8000920:	f04f 4390 	mov.w	r3, #1207959552	; 0x48000000
 8000924:	60fb      	str	r3, [r7, #12]
	GpioLed.GPIO_Pin_Config.GPIO_PinNum = GPIO_PIN_5;
 8000926:	2305      	movs	r3, #5
 8000928:	743b      	strb	r3, [r7, #16]
	GpioLed.GPIO_Pin_Config.GPIO_PinMode = GPIO_MODE_OUTPUT;
 800092a:	2301      	movs	r3, #1
 800092c:	747b      	strb	r3, [r7, #17]
	GpioLed.GPIO_Pin_Config.GPIO_PinOType = GPIO_OUT_TYPE_PP;
 800092e:	2300      	movs	r3, #0
 8000930:	74fb      	strb	r3, [r7, #19]
	GpioLed.GPIO_Pin_Config.GPIO_PinSpeed = GPIO_OUT_SPEED_HIGH;
 8000932:	2303      	movs	r3, #3
 8000934:	74bb      	strb	r3, [r7, #18]
	GpioLed.GPIO_Pin_Config.GPIO_PinPuPdCntrl = GPIO_PUPDR_NPUPD;
 8000936:	2300      	movs	r3, #0
 8000938:	753b      	strb	r3, [r7, #20]

	GPIO_PCLKControl(GPIOA, ENABLE);
 800093a:	2101      	movs	r1, #1
 800093c:	f04f 4090 	mov.w	r0, #1207959552	; 0x48000000
 8000940:	f7ff fc48 	bl	80001d4 <GPIO_PCLKControl>
	GPIO_Init(&GpioLed);
 8000944:	f107 030c 	add.w	r3, r7, #12
 8000948:	4618      	mov	r0, r3
 800094a:	f7ff fd31 	bl	80003b0 <GPIO_Init>


	//Button handle init
	GpioButton.pGPIOx = GPIOC;
 800094e:	4b0d      	ldr	r3, [pc, #52]	; (8000984 <main+0x84>)
 8000950:	603b      	str	r3, [r7, #0]
	GpioButton.GPIO_Pin_Config.GPIO_PinNum = GPIO_PIN_13;
 8000952:	230d      	movs	r3, #13
 8000954:	713b      	strb	r3, [r7, #4]
	GpioButton.GPIO_Pin_Config.GPIO_PinMode = GPIO_MODE_IT_RET;
 8000956:	2305      	movs	r3, #5
 8000958:	717b      	strb	r3, [r7, #5]
	GpioButton.GPIO_Pin_Config.GPIO_PinSpeed = GPIO_OUT_SPEED_HIGH;
 800095a:	2303      	movs	r3, #3
 800095c:	71bb      	strb	r3, [r7, #6]
	GpioButton.GPIO_Pin_Config.GPIO_PinPuPdCntrl = GPIO_PUPDR_NPUPD;
 800095e:	2300      	movs	r3, #0
 8000960:	723b      	strb	r3, [r7, #8]

	//enable clock
	GPIO_PCLKControl(GPIOC, ENABLE);
 8000962:	2101      	movs	r1, #1
 8000964:	4807      	ldr	r0, [pc, #28]	; (8000984 <main+0x84>)
 8000966:	f7ff fc35 	bl	80001d4 <GPIO_PCLKControl>
	GPIO_Init(&GpioButton);
 800096a:	463b      	mov	r3, r7
 800096c:	4618      	mov	r0, r3
 800096e:	f7ff fd1f 	bl	80003b0 <GPIO_Init>

	//IRQ config
	GPIO_IRQ_PriorityConfig(IRQ_NUM_EXTI15_10, NVIC_IRQ_PRIO0);
 8000972:	2100      	movs	r1, #0
 8000974:	2028      	movs	r0, #40	; 0x28
 8000976:	f7ff ff5b 	bl	8000830 <GPIO_IRQ_PriorityConfig>
	GPIO_IRQConfig(IRQ_NUM_EXTI15_10, ENABLE);
 800097a:	2101      	movs	r1, #1
 800097c:	2028      	movs	r0, #40	; 0x28
 800097e:	f7ff fed1 	bl	8000724 <GPIO_IRQConfig>

	while (1);
 8000982:	e7fe      	b.n	8000982 <main+0x82>
 8000984:	48000800 	.word	0x48000800

08000988 <EXTI15_10_IRQHandler>:


}
void EXTI15_10_IRQHandler(void)
{
 8000988:	b580      	push	{r7, lr}
 800098a:	af00      	add	r7, sp, #0
	delay();
 800098c:	f7ff ffa2 	bl	80008d4 <delay>
	GPIO_IRQHandler(GPIO_PIN_13);
 8000990:	200d      	movs	r0, #13
 8000992:	f7ff ff7b 	bl	800088c <GPIO_IRQHandler>
	GPIO_ToggleOutPin(GPIOA, GPIO_PIN_5);
 8000996:	2105      	movs	r1, #5
 8000998:	f04f 4090 	mov.w	r0, #1207959552	; 0x48000000
 800099c:	f7ff feac 	bl	80006f8 <GPIO_ToggleOutPin>
}
 80009a0:	bf00      	nop
 80009a2:	bd80      	pop	{r7, pc}

080009a4 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 80009a4:	480d      	ldr	r0, [pc, #52]	; (80009dc <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 80009a6:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 80009a8:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 80009ac:	480c      	ldr	r0, [pc, #48]	; (80009e0 <LoopForever+0x6>)
  ldr r1, =_edata
 80009ae:	490d      	ldr	r1, [pc, #52]	; (80009e4 <LoopForever+0xa>)
  ldr r2, =_sidata
 80009b0:	4a0d      	ldr	r2, [pc, #52]	; (80009e8 <LoopForever+0xe>)
  movs r3, #0
 80009b2:	2300      	movs	r3, #0
  b LoopCopyDataInit
 80009b4:	e002      	b.n	80009bc <LoopCopyDataInit>

080009b6 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 80009b6:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 80009b8:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 80009ba:	3304      	adds	r3, #4

080009bc <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 80009bc:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 80009be:	428c      	cmp	r4, r1
  bcc CopyDataInit
 80009c0:	d3f9      	bcc.n	80009b6 <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 80009c2:	4a0a      	ldr	r2, [pc, #40]	; (80009ec <LoopForever+0x12>)
  ldr r4, =_ebss
 80009c4:	4c0a      	ldr	r4, [pc, #40]	; (80009f0 <LoopForever+0x16>)
  movs r3, #0
 80009c6:	2300      	movs	r3, #0
  b LoopFillZerobss
 80009c8:	e001      	b.n	80009ce <LoopFillZerobss>

080009ca <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 80009ca:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 80009cc:	3204      	adds	r2, #4

080009ce <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 80009ce:	42a2      	cmp	r2, r4
  bcc FillZerobss
 80009d0:	d3fb      	bcc.n	80009ca <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 80009d2:	f000 f811 	bl	80009f8 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 80009d6:	f7ff ff93 	bl	8000900 <main>

080009da <LoopForever>:

LoopForever:
    b LoopForever
 80009da:	e7fe      	b.n	80009da <LoopForever>
  ldr   r0, =_estack
 80009dc:	20010000 	.word	0x20010000
  ldr r0, =_sdata
 80009e0:	20000000 	.word	0x20000000
  ldr r1, =_edata
 80009e4:	2000000c 	.word	0x2000000c
  ldr r2, =_sidata
 80009e8:	08000a70 	.word	0x08000a70
  ldr r2, =_sbss
 80009ec:	2000000c 	.word	0x2000000c
  ldr r4, =_ebss
 80009f0:	20000028 	.word	0x20000028

080009f4 <ADC1_2_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 80009f4:	e7fe      	b.n	80009f4 <ADC1_2_IRQHandler>
	...

080009f8 <__libc_init_array>:
 80009f8:	b570      	push	{r4, r5, r6, lr}
 80009fa:	4d0d      	ldr	r5, [pc, #52]	; (8000a30 <__libc_init_array+0x38>)
 80009fc:	4c0d      	ldr	r4, [pc, #52]	; (8000a34 <__libc_init_array+0x3c>)
 80009fe:	1b64      	subs	r4, r4, r5
 8000a00:	10a4      	asrs	r4, r4, #2
 8000a02:	2600      	movs	r6, #0
 8000a04:	42a6      	cmp	r6, r4
 8000a06:	d109      	bne.n	8000a1c <__libc_init_array+0x24>
 8000a08:	4d0b      	ldr	r5, [pc, #44]	; (8000a38 <__libc_init_array+0x40>)
 8000a0a:	4c0c      	ldr	r4, [pc, #48]	; (8000a3c <__libc_init_array+0x44>)
 8000a0c:	f000 f820 	bl	8000a50 <_init>
 8000a10:	1b64      	subs	r4, r4, r5
 8000a12:	10a4      	asrs	r4, r4, #2
 8000a14:	2600      	movs	r6, #0
 8000a16:	42a6      	cmp	r6, r4
 8000a18:	d105      	bne.n	8000a26 <__libc_init_array+0x2e>
 8000a1a:	bd70      	pop	{r4, r5, r6, pc}
 8000a1c:	f855 3b04 	ldr.w	r3, [r5], #4
 8000a20:	4798      	blx	r3
 8000a22:	3601      	adds	r6, #1
 8000a24:	e7ee      	b.n	8000a04 <__libc_init_array+0xc>
 8000a26:	f855 3b04 	ldr.w	r3, [r5], #4
 8000a2a:	4798      	blx	r3
 8000a2c:	3601      	adds	r6, #1
 8000a2e:	e7f2      	b.n	8000a16 <__libc_init_array+0x1e>
 8000a30:	08000a68 	.word	0x08000a68
 8000a34:	08000a68 	.word	0x08000a68
 8000a38:	08000a68 	.word	0x08000a68
 8000a3c:	08000a6c 	.word	0x08000a6c

08000a40 <memset>:
 8000a40:	4402      	add	r2, r0
 8000a42:	4603      	mov	r3, r0
 8000a44:	4293      	cmp	r3, r2
 8000a46:	d100      	bne.n	8000a4a <memset+0xa>
 8000a48:	4770      	bx	lr
 8000a4a:	f803 1b01 	strb.w	r1, [r3], #1
 8000a4e:	e7f9      	b.n	8000a44 <memset+0x4>

08000a50 <_init>:
 8000a50:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000a52:	bf00      	nop
 8000a54:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000a56:	bc08      	pop	{r3}
 8000a58:	469e      	mov	lr, r3
 8000a5a:	4770      	bx	lr

08000a5c <_fini>:
 8000a5c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000a5e:	bf00      	nop
 8000a60:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000a62:	bc08      	pop	{r3}
 8000a64:	469e      	mov	lr, r3
 8000a66:	4770      	bx	lr
